2023-05-30 00:00:11,635 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node -1 disconnected.
2023-05-30 00:00:11,635 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node -1 disconnected.
2023-05-30 00:00:11,644 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:11,644 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:11,701 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:11,701 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 790 due to node 1002 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2023-05-30 00:00:11,733 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:11,733 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Cancelled in-flight API_VERSIONS request with correlation id 2094 due to node 1002 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2023-05-30 00:00:11,811 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:11,812 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 791 due to node 1002 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2023-05-30 00:00:11,842 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:11,843 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Cancelled in-flight API_VERSIONS request with correlation id 2095 due to node 1002 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2023-05-30 00:00:12,054 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:12,056 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 792 due to node 1002 being disconnected (elapsed time since creation: 7ms, elapsed time since send: 7ms, request timeout: 30000ms)
2023-05-30 00:00:12,143 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:12,144 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Cancelled in-flight API_VERSIONS request with correlation id 2096 due to node 1002 being disconnected (elapsed time since creation: 3ms, elapsed time since send: 3ms, request timeout: 30000ms)
2023-05-30 00:00:12,487 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:12,488 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 793 due to node 1002 being disconnected (elapsed time since creation: 3ms, elapsed time since send: 3ms, request timeout: 30000ms)
2023-05-30 00:00:12,534 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:12,534 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Cancelled in-flight API_VERSIONS request with correlation id 2097 due to node 1002 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2023-05-30 00:00:13,221 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:13,221 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 794 due to node 1002 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2023-05-30 00:00:13,330 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:13,330 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Cancelled in-flight API_VERSIONS request with correlation id 2098 due to node 1002 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2023-05-30 00:00:14,203 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:14,204 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 795 due to node 1002 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2023-05-30 00:00:14,374 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:14,374 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Cancelled in-flight API_VERSIONS request with correlation id 2099 due to node 1002 being disconnected (elapsed time since creation: 3ms, elapsed time since send: 3ms, request timeout: 30000ms)
2023-05-30 00:00:15,242 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:15,242 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:15,472 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:15,473 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:16,344 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:16,344 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:16,578 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:16,578 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:17,569 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:17,570 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:17,789 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:17,790 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:18,743 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:18,744 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:18,961 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:18,961 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:19,661 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:19,662 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:20,128 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:20,129 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:20,519 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:20,520 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:21,237 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:21,237 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:21,499 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:21,499 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:22,150 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:22,151 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:22,723 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:22,724 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:23,114 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:23,114 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:23,556 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:23,556 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:24,140 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:24,142 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:24,483 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:24,484 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:25,312 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:25,313 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:25,592 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:25,592 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:26,416 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:26,417 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:26,632 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:26,633 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:27,634 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:27,635 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:27,744 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:27,745 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:28,552 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:28,553 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:28,848 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:28,849 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:29,473 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:29,473 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:29,769 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:29,769 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:30,642 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:30,642 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:30,691 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:30,691 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:31,796 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:31,797 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:31,811 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:31,812 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:32,765 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:32,766 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:32,905 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:32,905 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:33,946 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:33,946 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:34,087 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:34,087 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:34,950 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:34,951 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:34,996 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:34,996 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:35,873 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:35,874 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:35,921 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:35,921 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:36,799 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:36,799 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:37,029 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:37,030 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:37,904 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:37,905 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:38,139 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:38,139 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:38,883 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:38,883 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:39,117 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:39,117 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:40,111 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:40,111 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:40,285 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:40,286 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:41,032 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:41,032 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:41,452 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:41,453 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:42,136 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:42,136 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:42,452 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:42,453 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:43,243 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:43,243 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:43,493 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:43,493 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:44,287 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:44,287 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:44,598 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:44,598 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:45,134 ERROR [kafka-producer-network-thread | producer-1] org.springframework.kafka.support.LoggingProducerListener : Exception thrown when sending a message with key='null' and payload='deneme' to topic test_topic:
org.apache.kafka.common.errors.TimeoutException: Expiring 3 record(s) for test_topic-1:120007 ms has passed since batch creation
2023-05-30 00:00:45,139 ERROR [kafka-producer-network-thread | producer-1] org.springframework.kafka.support.LoggingProducerListener : Exception thrown when sending a message with key='null' and payload='deneme' to topic test_topic:
org.apache.kafka.common.errors.TimeoutException: Expiring 3 record(s) for test_topic-1:120007 ms has passed since batch creation
2023-05-30 00:00:45,140 ERROR [kafka-producer-network-thread | producer-1] org.springframework.kafka.support.LoggingProducerListener : Exception thrown when sending a message with key='null' and payload='deneme' to topic test_topic:
org.apache.kafka.common.errors.TimeoutException: Expiring 3 record(s) for test_topic-1:120007 ms has passed since batch creation
2023-05-30 00:00:45,441 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:45,442 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:45,457 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:45,458 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:46,426 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:46,426 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:46,583 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:46,583 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:47,457 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:47,457 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:47,472 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:47,473 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:48,388 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:48,388 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:48,561 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:48,562 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:49,310 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:49,311 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:49,603 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:49,603 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:50,416 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:50,416 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:50,713 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:50,714 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:51,521 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:51,521 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:51,944 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:51,944 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:52,568 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:52,569 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:53,019 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:53,019 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:53,674 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:53,675 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:53,875 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:53,875 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:54,527 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:54,528 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:54,732 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:54,732 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:55,505 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:55,506 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:55,770 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:55,770 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:56,544 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:56,545 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:56,749 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:56,750 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:57,713 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:57,714 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:57,840 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:57,840 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:58,756 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:58,757 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:58,938 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:00:58,938 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:00:59,670 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:00:59,670 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:00,110 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:00,110 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:00,717 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:00,717 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:01,220 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:01,221 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:01,641 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:01,643 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:02,329 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:02,329 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:02,534 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:02,534 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:03,377 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:03,377 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:03,645 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:03,645 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:04,356 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:04,357 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:04,813 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:04,813 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:05,282 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:05,282 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:05,984 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:05,985 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:06,328 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:06,328 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:07,030 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:07,030 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:07,184 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:07,184 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:08,042 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:08,042 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:08,228 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:08,229 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:09,027 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:09,028 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:09,398 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:09,398 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:10,004 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:10,004 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:10,568 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:10,569 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:11,175 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:11,175 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:11,674 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:11,674 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:12,094 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:12,095 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:12,593 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:12,594 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:13,046 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:13,046 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:13,764 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:13,764 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:13,903 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:13,904 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:14,680 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:14,680 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:15,134 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:15,134 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:15,617 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:15,617 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:16,119 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:16,119 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:16,540 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:16,541 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:17,040 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:17,040 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:17,396 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:17,397 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:18,047 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:18,048 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:18,374 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:18,375 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:18,971 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:18,971 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:19,547 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:19,547 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:19,949 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:19,950 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:20,653 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:20,653 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:20,809 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:20,810 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:21,694 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:21,694 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:21,850 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:21,850 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:22,679 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:22,680 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:22,865 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:22,866 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:23,597 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:23,598 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:23,722 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:23,722 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:24,451 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:24,451 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:24,953 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:24,954 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:25,502 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:25,502 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:25,937 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:25,937 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:26,548 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:26,548 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:27,045 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:27,046 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:27,530 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:27,530 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:27,935 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:27,935 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:28,572 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:28,572 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:28,918 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:28,918 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:29,801 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:29,802 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:30,145 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:30,146 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:30,911 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:30,911 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:31,069 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:31,070 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:32,010 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:32,010 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:32,042 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:32,042 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:33,005 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:33,006 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:33,116 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:33,116 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:34,159 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:34,159 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:34,175 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:34,175 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Connection to node 1002 (/127.0.0.1:9092) could not be established. Broker may not be available.
2023-05-30 00:01:35,268 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:35,269 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 796 due to node 1002 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2023-05-30 00:01:35,407 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:35,407 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Cancelled in-flight API_VERSIONS request with correlation id 2100 due to node 1002 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2023-05-30 00:01:36,319 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:36,319 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 797 due to node 1002 being disconnected (elapsed time since creation: 3ms, elapsed time since send: 3ms, request timeout: 30000ms)
2023-05-30 00:01:36,459 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:36,459 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Cancelled in-flight API_VERSIONS request with correlation id 2101 due to node 1002 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2023-05-30 00:01:37,392 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node 1002 disconnected.
2023-05-30 00:01:37,392 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Cancelled in-flight API_VERSIONS request with correlation id 2102 due to node 1002 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2023-05-30 00:01:37,548 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node 1002 disconnected.
2023-05-30 00:01:37,549 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 798 due to node 1002 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, request timeout: 30000ms)
2023-05-30 00:01:38,575 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Error while fetching metadata with correlation id 800 : {test_topic=LEADER_NOT_AVAILABLE}
2023-05-30 00:01:38,575 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 00:01:38,581 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Error while fetching metadata with correlation id 2105 : {test_topic=LEADER_NOT_AVAILABLE}
2023-05-30 00:01:38,582 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-1, groupId=group_id] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 00:01:38,695 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Error while fetching metadata with correlation id 802 : {test_topic=LEADER_NOT_AVAILABLE}
2023-05-30 00:01:38,706 WARN  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Error while fetching metadata with correlation id 2108 : {test_topic=LEADER_NOT_AVAILABLE}
2023-05-30 00:01:38,808 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition test_topic-0 to 0 since the associated topicId changed from null to HA_4mXEkQSunUUNWDpl2NQ
2023-05-30 00:01:38,822 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting the last seen epoch of partition test_topic-0 to 0 since the associated topicId changed from null to HA_4mXEkQSunUUNWDpl2NQ
2023-05-30 00:01:39,265 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
2023-05-30 00:01:39,268 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] (Re-)joining group
2023-05-30 00:01:39,299 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Request joining group due to: need to re-join with the given member-id: consumer-group_id-1-b795c77d-a70b-4e8c-9e29-d9e3fc23f7ef
2023-05-30 00:01:39,300 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-05-30 00:01:39,300 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] (Re-)joining group
2023-05-30 00:01:39,325 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Successfully joined group with generation Generation{generationId=1, memberId='consumer-group_id-1-b795c77d-a70b-4e8c-9e29-d9e3fc23f7ef', protocol='range'}
2023-05-30 00:01:39,327 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Finished assignment for group at generation 1: {consumer-group_id-1-b795c77d-a70b-4e8c-9e29-d9e3fc23f7ef=Assignment(partitions=[test_topic-0])}
2023-05-30 00:01:39,393 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Successfully synced group in generation Generation{generationId=1, memberId='consumer-group_id-1-b795c77d-a70b-4e8c-9e29-d9e3fc23f7ef', protocol='range'}
2023-05-30 00:01:39,393 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Notifying assignor about the new Assignment(partitions=[test_topic-0])
2023-05-30 00:01:39,396 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Adding newly assigned partitions: test_topic-0
2023-05-30 00:01:39,408 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Found no committed offset for partition test_topic-0
2023-05-30 00:01:39,422 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting offset for partition test_topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 00:01:39,423 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : group_id: partitions assigned: [test_topic-0]
2023-05-30 00:02:45,079 INFO  [http-nio-8080-exec-5] org.apache.kafka.clients.admin.AdminClientConfig : AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-05-30 00:02:45,082 WARN  [http-nio-8080-exec-5] org.apache.kafka.clients.admin.AdminClientConfig : These configurations '[value.serializer, key.serializer]' were supplied but are not used yet.
2023-05-30 00:02:45,082 INFO  [http-nio-8080-exec-5] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 00:02:45,082 INFO  [http-nio-8080-exec-5] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 00:02:45,082 INFO  [http-nio-8080-exec-5] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685419365082
2023-05-30 00:02:45,101 INFO  [kafka-admin-client-thread | adminclient-2] org.apache.kafka.common.utils.AppInfoParser : App info kafka.admin.client for adminclient-2 unregistered
2023-05-30 00:02:45,102 INFO  [kafka-admin-client-thread | adminclient-2] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 00:02:45,102 INFO  [kafka-admin-client-thread | adminclient-2] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 00:02:45,102 INFO  [kafka-admin-client-thread | adminclient-2] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 00:03:45,285 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Revoke previously assigned partitions test_topic-0
2023-05-30 00:03:45,285 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : group_id: partitions revoked: [test_topic-0]
2023-05-30 00:03:45,285 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Member consumer-group_id-1-b795c77d-a70b-4e8c-9e29-d9e3fc23f7ef sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2023-05-30 00:03:45,285 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 00:03:45,285 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 00:03:45,285 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-group_id-1, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
2023-05-30 00:03:45,286 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 00:03:45,286 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 00:03:45,298 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 00:03:45,298 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 00:03:45,298 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 00:03:45,300 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.utils.AppInfoParser : App info kafka.consumer for consumer-group_id-1 unregistered
2023-05-30 00:03:45,301 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : group_id: Consumer stopped
2023-05-30 00:03:45,322 INFO  [SpringApplicationShutdownHook] org.apache.kafka.clients.producer.KafkaProducer : [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2023-05-30 00:03:45,326 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 00:03:45,326 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 00:03:45,326 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 00:03:45,326 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.utils.AppInfoParser : App info kafka.producer for producer-1 unregistered
2023-05-30 00:03:45,327 INFO  [SpringApplicationShutdownHook] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-05-30 00:03:45,494 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Shutdown initiated...
2023-05-30 00:03:45,505 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Shutdown completed.
2023-05-30 00:03:48,686 INFO  [main] com.yusufu.awesomespring.AwesomeSpringApplication : Starting AwesomeSpringApplication using Java 18.0.2.1 with PID 5964 (C:\Users\yusufu\IdeaProjects\AwesomeSpring\build\classes\java\main started by yusufu in C:\Users\yusufu\IdeaProjects\AwesomeSpring)
2023-05-30 00:03:48,688 DEBUG [main] com.yusufu.awesomespring.AwesomeSpringApplication : Running with Spring Boot v3.1.0, Spring v6.0.9
2023-05-30 00:03:48,689 INFO  [main] com.yusufu.awesomespring.AwesomeSpringApplication : No active profile set, falling back to 1 default profile: "default"
2023-05-30 00:03:49,497 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-05-30 00:03:49,556 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 53 ms. Found 2 JPA repository interfaces.
2023-05-30 00:03:50,197 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 8080 (http)
2023-05-30 00:03:50,208 INFO  [main] org.apache.catalina.core.StandardService : Starting service [Tomcat]
2023-05-30 00:03:50,209 INFO  [main] org.apache.catalina.core.StandardEngine : Starting Servlet engine: [Apache Tomcat/10.1.8]
2023-05-30 00:03:50,318 INFO  [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] : Initializing Spring embedded WebApplicationContext
2023-05-30 00:03:50,319 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1579 ms
2023-05-30 00:03:50,351 INFO  [main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Starting...
2023-05-30 00:03:50,547 INFO  [main] com.zaxxer.hikari.pool.HikariPool : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2023-05-30 00:03:50,550 INFO  [main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Start completed.
2023-05-30 00:03:50,561 INFO  [main] org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration : H2 console available at '/h2'. Database available at 'jdbc:h2:mem:testdb'
2023-05-30 00:03:51,101 INFO  [main] org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-05-30 00:03:52,002 INFO  [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-05-30 00:03:52,453 WARN  [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-05-30 00:03:53,309 INFO  [main] org.apache.kafka.clients.admin.AdminClientConfig : AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-05-30 00:03:53,394 WARN  [main] org.apache.kafka.clients.admin.AdminClientConfig : These configurations '[value.serializer, key.serializer]' were supplied but are not used yet.
2023-05-30 00:03:53,396 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 00:03:53,396 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 00:03:53,396 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685419433395
2023-05-30 00:03:53,779 INFO  [main] org.springframework.kafka.core.KafkaAdmin : Topic 'test_topic' exists but has a different partition count: 1 not 3, increasing if the broker supports it
2023-05-30 00:03:53,853 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.utils.AppInfoParser : App info kafka.admin.client for adminclient-1 unregistered
2023-05-30 00:03:53,860 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 00:03:53,860 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 00:03:53,861 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 00:03:53,923 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer : Tomcat started on port(s): 8080 (http) with context path ''
2023-05-30 00:03:53,947 INFO  [main] org.apache.kafka.clients.consumer.ConsumerConfig : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-group_id-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-05-30 00:03:53,985 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 00:03:53,986 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 00:03:53,986 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685419433985
2023-05-30 00:03:53,988 INFO  [main] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-group_id-1, groupId=group_id] Subscribed to topic(s): test_topic
2023-05-30 00:03:54,008 INFO  [main] com.yusufu.awesomespring.AwesomeSpringApplication : Started AwesomeSpringApplication in 5.936 seconds (process running for 6.615)
2023-05-30 00:03:54,019 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting the last seen epoch of partition test_topic-0 to 0 since the associated topicId changed from null to HA_4mXEkQSunUUNWDpl2NQ
2023-05-30 00:03:54,019 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting the last seen epoch of partition test_topic-2 to 0 since the associated topicId changed from null to HA_4mXEkQSunUUNWDpl2NQ
2023-05-30 00:03:54,019 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting the last seen epoch of partition test_topic-1 to 0 since the associated topicId changed from null to HA_4mXEkQSunUUNWDpl2NQ
2023-05-30 00:03:54,020 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-1, groupId=group_id] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 00:03:54,022 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
2023-05-30 00:03:54,024 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] (Re-)joining group
2023-05-30 00:03:54,043 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Request joining group due to: need to re-join with the given member-id: consumer-group_id-1-5cf4596b-ff4d-4188-8d71-ec293ff5219d
2023-05-30 00:03:54,044 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-05-30 00:03:54,044 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] (Re-)joining group
2023-05-30 00:03:54,051 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Successfully joined group with generation Generation{generationId=3, memberId='consumer-group_id-1-5cf4596b-ff4d-4188-8d71-ec293ff5219d', protocol='range'}
2023-05-30 00:03:54,054 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Finished assignment for group at generation 3: {consumer-group_id-1-5cf4596b-ff4d-4188-8d71-ec293ff5219d=Assignment(partitions=[test_topic-0, test_topic-1, test_topic-2])}
2023-05-30 00:03:54,062 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Successfully synced group in generation Generation{generationId=3, memberId='consumer-group_id-1-5cf4596b-ff4d-4188-8d71-ec293ff5219d', protocol='range'}
2023-05-30 00:03:54,063 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Notifying assignor about the new Assignment(partitions=[test_topic-0, test_topic-1, test_topic-2])
2023-05-30 00:03:54,067 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Adding newly assigned partitions: test_topic-0, test_topic-1, test_topic-2
2023-05-30 00:03:54,077 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Found no committed offset for partition test_topic-2
2023-05-30 00:03:54,077 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Found no committed offset for partition test_topic-1
2023-05-30 00:03:54,077 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Found no committed offset for partition test_topic-0
2023-05-30 00:03:54,094 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting offset for partition test_topic-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 00:03:54,094 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting offset for partition test_topic-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 00:03:54,094 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting offset for partition test_topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 00:03:54,095 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : group_id: partitions assigned: [test_topic-0, test_topic-1, test_topic-2]
2023-05-30 00:04:01,206 INFO  [http-nio-8080-exec-1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-05-30 00:04:01,247 INFO  [http-nio-8080-exec-1] org.apache.kafka.clients.admin.AdminClientConfig : AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-05-30 00:04:01,249 WARN  [http-nio-8080-exec-1] org.apache.kafka.clients.admin.AdminClientConfig : These configurations '[value.serializer, key.serializer]' were supplied but are not used yet.
2023-05-30 00:04:01,249 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 00:04:01,249 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 00:04:01,249 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685419441249
2023-05-30 00:04:01,267 INFO  [kafka-admin-client-thread | adminclient-2] org.apache.kafka.common.utils.AppInfoParser : App info kafka.admin.client for adminclient-2 unregistered
2023-05-30 00:04:01,268 INFO  [kafka-admin-client-thread | adminclient-2] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 00:04:01,268 INFO  [kafka-admin-client-thread | adminclient-2] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 00:04:01,268 INFO  [kafka-admin-client-thread | adminclient-2] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 00:04:18,738 INFO  [http-nio-8080-exec-3] org.apache.kafka.clients.producer.ProducerConfig : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2023-05-30 00:04:18,745 INFO  [http-nio-8080-exec-3] org.apache.kafka.clients.producer.KafkaProducer : [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-05-30 00:04:18,758 INFO  [http-nio-8080-exec-3] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 00:04:18,758 INFO  [http-nio-8080-exec-3] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 00:04:18,758 INFO  [http-nio-8080-exec-3] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685419458758
2023-05-30 00:04:18,768 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition test_topic-0 to 0 since the associated topicId changed from null to HA_4mXEkQSunUUNWDpl2NQ
2023-05-30 00:04:18,773 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition test_topic-2 to 0 since the associated topicId changed from null to HA_4mXEkQSunUUNWDpl2NQ
2023-05-30 00:04:18,773 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition test_topic-1 to 0 since the associated topicId changed from null to HA_4mXEkQSunUUNWDpl2NQ
2023-05-30 00:04:18,773 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 00:04:18,780 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.producer.internals.TransactionManager : [Producer clientId=producer-1] ProducerId set to 0 with epoch 0
2023-05-30 00:09:00,004 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Revoke previously assigned partitions test_topic-0, test_topic-1, test_topic-2
2023-05-30 00:09:00,005 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : group_id: partitions revoked: [test_topic-0, test_topic-1, test_topic-2]
2023-05-30 00:09:00,005 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Member consumer-group_id-1-5cf4596b-ff4d-4188-8d71-ec293ff5219d sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2023-05-30 00:09:00,006 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 00:09:00,006 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 00:09:00,006 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-group_id-1, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
2023-05-30 00:09:00,006 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 00:09:00,006 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 00:09:00,012 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 00:09:00,013 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 00:09:00,013 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 00:09:00,015 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.utils.AppInfoParser : App info kafka.consumer for consumer-group_id-1 unregistered
2023-05-30 00:09:00,016 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : group_id: Consumer stopped
2023-05-30 00:09:00,037 INFO  [SpringApplicationShutdownHook] org.apache.kafka.clients.producer.KafkaProducer : [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2023-05-30 00:09:00,040 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 00:09:00,041 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 00:09:00,041 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 00:09:00,041 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.utils.AppInfoParser : App info kafka.producer for producer-1 unregistered
2023-05-30 00:09:00,042 INFO  [SpringApplicationShutdownHook] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-05-30 00:09:00,221 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Shutdown initiated...
2023-05-30 00:09:00,231 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Shutdown completed.
2023-05-30 00:09:03,300 INFO  [main] com.yusufu.awesomespring.AwesomeSpringApplication : Starting AwesomeSpringApplication using Java 18.0.2.1 with PID 13608 (C:\Users\yusufu\IdeaProjects\AwesomeSpring\build\classes\java\main started by yusufu in C:\Users\yusufu\IdeaProjects\AwesomeSpring)
2023-05-30 00:09:03,302 DEBUG [main] com.yusufu.awesomespring.AwesomeSpringApplication : Running with Spring Boot v3.1.0, Spring v6.0.9
2023-05-30 00:09:03,303 INFO  [main] com.yusufu.awesomespring.AwesomeSpringApplication : No active profile set, falling back to 1 default profile: "default"
2023-05-30 00:09:04,132 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-05-30 00:09:04,189 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 50 ms. Found 2 JPA repository interfaces.
2023-05-30 00:09:04,840 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 8080 (http)
2023-05-30 00:09:04,850 INFO  [main] org.apache.catalina.core.StandardService : Starting service [Tomcat]
2023-05-30 00:09:04,851 INFO  [main] org.apache.catalina.core.StandardEngine : Starting Servlet engine: [Apache Tomcat/10.1.8]
2023-05-30 00:09:04,959 INFO  [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] : Initializing Spring embedded WebApplicationContext
2023-05-30 00:09:04,960 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1592 ms
2023-05-30 00:09:04,991 INFO  [main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Starting...
2023-05-30 00:09:05,180 INFO  [main] com.zaxxer.hikari.pool.HikariPool : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2023-05-30 00:09:05,181 INFO  [main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Start completed.
2023-05-30 00:09:05,191 INFO  [main] org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration : H2 console available at '/h2'. Database available at 'jdbc:h2:mem:testdb'
2023-05-30 00:09:05,680 INFO  [main] org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-05-30 00:09:06,612 INFO  [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-05-30 00:09:07,071 WARN  [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-05-30 00:09:07,939 INFO  [main] org.apache.kafka.clients.admin.AdminClientConfig : AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-05-30 00:09:08,009 WARN  [main] org.apache.kafka.clients.admin.AdminClientConfig : These configurations '[value.serializer, key.serializer]' were supplied but are not used yet.
2023-05-30 00:09:08,012 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 00:09:08,013 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 00:09:08,013 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685419748010
2023-05-30 00:09:08,411 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.utils.AppInfoParser : App info kafka.admin.client for adminclient-1 unregistered
2023-05-30 00:09:08,418 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 00:09:08,418 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 00:09:08,418 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 00:09:08,502 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer : Tomcat started on port(s): 8080 (http) with context path ''
2023-05-30 00:09:08,539 INFO  [main] org.apache.kafka.clients.consumer.ConsumerConfig : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-group_id-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-05-30 00:09:08,587 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 00:09:08,587 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 00:09:08,587 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685419748587
2023-05-30 00:09:08,588 INFO  [main] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-group_id-1, groupId=group_id] Subscribed to topic(s): test_topic
2023-05-30 00:09:08,602 INFO  [main] com.yusufu.awesomespring.AwesomeSpringApplication : Started AwesomeSpringApplication in 5.892 seconds (process running for 6.533)
2023-05-30 00:09:08,610 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting the last seen epoch of partition test_topic-0 to 0 since the associated topicId changed from null to HA_4mXEkQSunUUNWDpl2NQ
2023-05-30 00:09:08,610 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting the last seen epoch of partition test_topic-2 to 0 since the associated topicId changed from null to HA_4mXEkQSunUUNWDpl2NQ
2023-05-30 00:09:08,610 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting the last seen epoch of partition test_topic-1 to 0 since the associated topicId changed from null to HA_4mXEkQSunUUNWDpl2NQ
2023-05-30 00:09:08,611 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-1, groupId=group_id] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 00:09:08,611 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
2023-05-30 00:09:08,613 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] (Re-)joining group
2023-05-30 00:09:08,629 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Request joining group due to: need to re-join with the given member-id: consumer-group_id-1-83410864-9618-41b5-a26d-ac0ee5cbbbb6
2023-05-30 00:09:08,629 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-05-30 00:09:08,630 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] (Re-)joining group
2023-05-30 00:09:08,635 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Successfully joined group with generation Generation{generationId=5, memberId='consumer-group_id-1-83410864-9618-41b5-a26d-ac0ee5cbbbb6', protocol='range'}
2023-05-30 00:09:08,637 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Finished assignment for group at generation 5: {consumer-group_id-1-83410864-9618-41b5-a26d-ac0ee5cbbbb6=Assignment(partitions=[test_topic-0, test_topic-1, test_topic-2])}
2023-05-30 00:09:08,646 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Successfully synced group in generation Generation{generationId=5, memberId='consumer-group_id-1-83410864-9618-41b5-a26d-ac0ee5cbbbb6', protocol='range'}
2023-05-30 00:09:08,647 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Notifying assignor about the new Assignment(partitions=[test_topic-0, test_topic-1, test_topic-2])
2023-05-30 00:09:08,651 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Adding newly assigned partitions: test_topic-0, test_topic-1, test_topic-2
2023-05-30 00:09:08,659 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Found no committed offset for partition test_topic-2
2023-05-30 00:09:08,659 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Found no committed offset for partition test_topic-0
2023-05-30 00:09:08,661 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Setting offset for partition test_topic-1 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
2023-05-30 00:09:08,675 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting offset for partition test_topic-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 00:09:08,675 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting offset for partition test_topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 00:09:08,676 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : group_id: partitions assigned: [test_topic-0, test_topic-1, test_topic-2]
2023-05-30 00:18:08,927 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node -1 disconnected.
2023-05-30 00:33:05,611 INFO  [http-nio-8080-exec-1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-05-30 00:33:05,698 INFO  [http-nio-8080-exec-1] org.apache.kafka.clients.producer.ProducerConfig : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2023-05-30 00:33:05,711 INFO  [http-nio-8080-exec-1] org.apache.kafka.clients.producer.KafkaProducer : [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-05-30 00:33:05,730 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 00:33:05,731 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 00:33:05,731 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685421185730
2023-05-30 00:33:05,743 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition test_topic-0 to 0 since the associated topicId changed from null to HA_4mXEkQSunUUNWDpl2NQ
2023-05-30 00:33:05,743 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition test_topic-2 to 0 since the associated topicId changed from null to HA_4mXEkQSunUUNWDpl2NQ
2023-05-30 00:33:05,744 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition test_topic-1 to 0 since the associated topicId changed from null to HA_4mXEkQSunUUNWDpl2NQ
2023-05-30 00:33:05,744 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 00:33:05,744 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.producer.internals.TransactionManager : [Producer clientId=producer-1] ProducerId set to 1 with epoch 0
2023-05-30 00:36:13,402 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Revoke previously assigned partitions test_topic-0, test_topic-1, test_topic-2
2023-05-30 00:36:13,403 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : group_id: partitions revoked: [test_topic-0, test_topic-1, test_topic-2]
2023-05-30 00:36:13,403 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Member consumer-group_id-1-83410864-9618-41b5-a26d-ac0ee5cbbbb6 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2023-05-30 00:36:13,404 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 00:36:13,404 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 00:36:13,404 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-group_id-1, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
2023-05-30 00:36:13,405 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 00:36:13,405 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 00:36:13,409 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 00:36:13,410 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 00:36:13,410 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 00:36:13,412 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.utils.AppInfoParser : App info kafka.consumer for consumer-group_id-1 unregistered
2023-05-30 00:36:13,412 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : group_id: Consumer stopped
2023-05-30 00:36:13,432 INFO  [SpringApplicationShutdownHook] org.apache.kafka.clients.producer.KafkaProducer : [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2023-05-30 00:36:13,435 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 00:36:13,435 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 00:36:13,435 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 00:36:13,436 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.utils.AppInfoParser : App info kafka.producer for producer-1 unregistered
2023-05-30 00:36:13,436 INFO  [SpringApplicationShutdownHook] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-05-30 00:36:13,607 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Shutdown initiated...
2023-05-30 00:36:13,617 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Shutdown completed.
2023-05-30 00:36:17,260 INFO  [main] com.yusufu.awesomespring.AwesomeSpringApplication : Starting AwesomeSpringApplication using Java 18.0.2.1 with PID 1624 (C:\Users\yusufu\IdeaProjects\AwesomeSpring\build\classes\java\main started by yusufu in C:\Users\yusufu\IdeaProjects\AwesomeSpring)
2023-05-30 00:36:17,262 DEBUG [main] com.yusufu.awesomespring.AwesomeSpringApplication : Running with Spring Boot v3.1.0, Spring v6.0.9
2023-05-30 00:36:17,264 INFO  [main] com.yusufu.awesomespring.AwesomeSpringApplication : No active profile set, falling back to 1 default profile: "default"
2023-05-30 00:36:18,159 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-05-30 00:36:18,230 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 62 ms. Found 2 JPA repository interfaces.
2023-05-30 00:36:18,917 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 8080 (http)
2023-05-30 00:36:18,926 INFO  [main] org.apache.catalina.core.StandardService : Starting service [Tomcat]
2023-05-30 00:36:18,926 INFO  [main] org.apache.catalina.core.StandardEngine : Starting Servlet engine: [Apache Tomcat/10.1.8]
2023-05-30 00:36:19,057 INFO  [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] : Initializing Spring embedded WebApplicationContext
2023-05-30 00:36:19,058 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1724 ms
2023-05-30 00:36:19,090 INFO  [main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Starting...
2023-05-30 00:36:19,305 INFO  [main] com.zaxxer.hikari.pool.HikariPool : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2023-05-30 00:36:19,308 INFO  [main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Start completed.
2023-05-30 00:36:19,318 INFO  [main] org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration : H2 console available at '/h2'. Database available at 'jdbc:h2:mem:testdb'
2023-05-30 00:36:19,913 INFO  [main] org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-05-30 00:36:21,009 INFO  [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-05-30 00:39:07,036 WARN  [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m47s621ms928µs300ns).
2023-05-30 00:39:07,236 WARN  [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-05-30 00:39:08,314 INFO  [main] org.apache.kafka.clients.admin.AdminClientConfig : AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-05-30 00:39:08,399 WARN  [main] org.apache.kafka.clients.admin.AdminClientConfig : These configurations '[value.serializer, key.serializer]' were supplied but are not used yet.
2023-05-30 00:39:08,401 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 00:39:08,401 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 00:39:08,401 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685421548399
2023-05-30 00:39:08,819 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.utils.AppInfoParser : App info kafka.admin.client for adminclient-1 unregistered
2023-05-30 00:39:08,826 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 00:39:08,826 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 00:39:08,826 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 00:39:08,904 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer : Tomcat started on port(s): 8080 (http) with context path ''
2023-05-30 00:39:08,936 INFO  [main] org.apache.kafka.clients.consumer.ConsumerConfig : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-group_id-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-05-30 00:39:08,979 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 00:39:08,979 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 00:39:08,979 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685421548979
2023-05-30 00:39:08,981 INFO  [main] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-group_id-1, groupId=group_id] Subscribed to topic(s): test_topic
2023-05-30 00:39:09,002 INFO  [main] com.yusufu.awesomespring.AwesomeSpringApplication : Started AwesomeSpringApplication in 172.382 seconds (process running for 173.518)
2023-05-30 00:39:09,011 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting the last seen epoch of partition test_topic-0 to 0 since the associated topicId changed from null to HA_4mXEkQSunUUNWDpl2NQ
2023-05-30 00:39:09,012 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting the last seen epoch of partition test_topic-2 to 0 since the associated topicId changed from null to HA_4mXEkQSunUUNWDpl2NQ
2023-05-30 00:39:09,012 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting the last seen epoch of partition test_topic-1 to 0 since the associated topicId changed from null to HA_4mXEkQSunUUNWDpl2NQ
2023-05-30 00:39:09,014 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-1, groupId=group_id] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 00:39:09,014 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
2023-05-30 00:39:09,017 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] (Re-)joining group
2023-05-30 00:39:09,037 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Request joining group due to: need to re-join with the given member-id: consumer-group_id-1-8d213bb9-590b-4db0-9937-c3bf33a1d218
2023-05-30 00:39:09,038 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-05-30 00:39:09,038 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] (Re-)joining group
2023-05-30 00:39:09,045 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Successfully joined group with generation Generation{generationId=7, memberId='consumer-group_id-1-8d213bb9-590b-4db0-9937-c3bf33a1d218', protocol='range'}
2023-05-30 00:39:09,048 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Finished assignment for group at generation 7: {consumer-group_id-1-8d213bb9-590b-4db0-9937-c3bf33a1d218=Assignment(partitions=[test_topic-0, test_topic-1, test_topic-2])}
2023-05-30 00:39:09,058 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Successfully synced group in generation Generation{generationId=7, memberId='consumer-group_id-1-8d213bb9-590b-4db0-9937-c3bf33a1d218', protocol='range'}
2023-05-30 00:39:09,059 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Notifying assignor about the new Assignment(partitions=[test_topic-0, test_topic-1, test_topic-2])
2023-05-30 00:39:09,062 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Adding newly assigned partitions: test_topic-0, test_topic-1, test_topic-2
2023-05-30 00:39:09,072 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Found no committed offset for partition test_topic-2
2023-05-30 00:39:09,073 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Found no committed offset for partition test_topic-0
2023-05-30 00:39:09,076 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Setting offset for partition test_topic-1 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
2023-05-30 00:39:09,093 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting offset for partition test_topic-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 00:39:09,094 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting offset for partition test_topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 00:39:09,095 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : group_id: partitions assigned: [test_topic-0, test_topic-1, test_topic-2]
2023-05-30 00:43:34,422 INFO  [http-nio-8080-exec-1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-05-30 00:43:34,479 INFO  [http-nio-8080-exec-1] org.apache.kafka.clients.producer.ProducerConfig : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2023-05-30 00:43:34,491 INFO  [http-nio-8080-exec-1] org.apache.kafka.clients.producer.KafkaProducer : [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-05-30 00:43:34,507 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 00:43:34,507 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 00:43:34,507 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685421814507
2023-05-30 00:43:34,518 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition test_topic-0 to 0 since the associated topicId changed from null to HA_4mXEkQSunUUNWDpl2NQ
2023-05-30 00:43:34,519 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition test_topic-2 to 0 since the associated topicId changed from null to HA_4mXEkQSunUUNWDpl2NQ
2023-05-30 00:43:34,519 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition test_topic-1 to 0 since the associated topicId changed from null to HA_4mXEkQSunUUNWDpl2NQ
2023-05-30 00:43:34,519 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 00:43:34,520 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.producer.internals.TransactionManager : [Producer clientId=producer-1] ProducerId set to 2 with epoch 0
2023-05-30 00:48:09,275 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-group_id-1, groupId=group_id] Node -1 disconnected.
2023-05-30 00:52:34,596 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node -1 disconnected.
2023-05-30 01:09:53,672 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Revoke previously assigned partitions test_topic-0, test_topic-1, test_topic-2
2023-05-30 01:09:53,673 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : group_id: partitions revoked: [test_topic-0, test_topic-1, test_topic-2]
2023-05-30 01:09:53,673 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Member consumer-group_id-1-8d213bb9-590b-4db0-9937-c3bf33a1d218 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2023-05-30 01:09:53,674 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 01:09:53,674 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 01:09:53,674 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-group_id-1, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
2023-05-30 01:09:53,675 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 01:09:53,675 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-1, groupId=group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 01:09:53,681 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 01:09:53,682 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 01:09:53,682 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 01:09:53,684 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.utils.AppInfoParser : App info kafka.consumer for consumer-group_id-1 unregistered
2023-05-30 01:09:53,685 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : group_id: Consumer stopped
2023-05-30 01:09:53,714 INFO  [SpringApplicationShutdownHook] org.apache.kafka.clients.producer.KafkaProducer : [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2023-05-30 01:09:53,716 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 01:09:53,716 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 01:09:53,716 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 01:09:53,716 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.utils.AppInfoParser : App info kafka.producer for producer-1 unregistered
2023-05-30 01:09:53,717 INFO  [SpringApplicationShutdownHook] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-05-30 01:09:53,877 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Shutdown initiated...
2023-05-30 01:09:53,885 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Shutdown completed.
2023-05-30 01:30:30,406 INFO  [main] com.yusufu.awesomespring.AwesomeSpringApplication : Starting AwesomeSpringApplication using Java 18.0.2.1 with PID 13596 (C:\Users\yusufu\IdeaProjects\AwesomeSpring\build\classes\java\main started by yusufu in C:\Users\yusufu\IdeaProjects\AwesomeSpring)
2023-05-30 01:30:30,408 DEBUG [main] com.yusufu.awesomespring.AwesomeSpringApplication : Running with Spring Boot v3.1.0, Spring v6.0.9
2023-05-30 01:30:30,409 INFO  [main] com.yusufu.awesomespring.AwesomeSpringApplication : No active profile set, falling back to 1 default profile: "default"
2023-05-30 01:30:31,192 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-05-30 01:30:31,246 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 48 ms. Found 2 JPA repository interfaces.
2023-05-30 01:30:31,865 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 8080 (http)
2023-05-30 01:30:31,874 INFO  [main] org.apache.catalina.core.StandardService : Starting service [Tomcat]
2023-05-30 01:30:31,875 INFO  [main] org.apache.catalina.core.StandardEngine : Starting Servlet engine: [Apache Tomcat/10.1.8]
2023-05-30 01:30:31,974 INFO  [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] : Initializing Spring embedded WebApplicationContext
2023-05-30 01:30:31,974 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1509 ms
2023-05-30 01:30:32,003 INFO  [main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Starting...
2023-05-30 01:30:32,195 INFO  [main] com.zaxxer.hikari.pool.HikariPool : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2023-05-30 01:30:32,197 INFO  [main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Start completed.
2023-05-30 01:30:32,206 INFO  [main] org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration : H2 console available at '/h2'. Database available at 'jdbc:h2:mem:testdb'
2023-05-30 01:30:32,715 INFO  [main] org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-05-30 01:30:33,729 INFO  [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-05-30 01:30:34,227 WARN  [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-05-30 01:30:35,089 INFO  [main] org.apache.kafka.clients.admin.AdminClientConfig : AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-05-30 01:30:35,177 WARN  [main] org.apache.kafka.clients.admin.AdminClientConfig : These configurations '[value.serializer, key.serializer]' were supplied but are not used yet.
2023-05-30 01:30:35,179 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 01:30:35,179 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 01:30:35,179 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685424635177
2023-05-30 01:30:35,829 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.utils.AppInfoParser : App info kafka.admin.client for adminclient-1 unregistered
2023-05-30 01:30:35,835 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 01:30:35,836 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 01:30:35,836 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 01:30:35,914 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer : Tomcat started on port(s): 8080 (http) with context path ''
2023-05-30 01:30:35,938 INFO  [main] org.apache.kafka.clients.consumer.ConsumerConfig : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-id1-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = id1
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-05-30 01:30:35,973 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 01:30:35,973 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 01:30:35,973 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685424635973
2023-05-30 01:30:35,975 INFO  [main] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-id1-1, groupId=id1] Subscribed to topic(s): topic2
2023-05-30 01:30:35,981 INFO  [main] org.apache.kafka.clients.consumer.ConsumerConfig : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-group_id-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-05-30 01:30:35,987 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 01:30:35,987 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 01:30:35,987 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685424635987
2023-05-30 01:30:35,988 INFO  [main] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-group_id-2, groupId=group_id] Subscribed to topic(s): topic1
2023-05-30 01:30:35,991 INFO  [main] org.apache.kafka.clients.consumer.ConsumerConfig : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-group_id-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-05-30 01:30:35,998 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 01:30:35,998 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 01:30:35,999 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685424635998
2023-05-30 01:30:35,999 INFO  [main] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-group_id-3, groupId=group_id] Subscribed to topic(s): topic0
2023-05-30 01:30:36,003 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting the last seen epoch of partition topic1-0 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:30:36,004 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting the last seen epoch of partition topic1-5 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:30:36,005 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting the last seen epoch of partition topic1-8 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:30:36,005 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting the last seen epoch of partition topic1-2 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:30:36,005 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting the last seen epoch of partition topic1-9 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:30:36,005 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting the last seen epoch of partition topic1-1 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:30:36,005 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting the last seen epoch of partition topic1-4 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:30:36,005 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting the last seen epoch of partition topic1-6 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:30:36,005 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting the last seen epoch of partition topic1-7 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:30:36,005 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting the last seen epoch of partition topic1-3 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:30:36,008 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-2, groupId=group_id] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 01:30:36,010 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
2023-05-30 01:30:36,011 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-3, groupId=group_id] Resetting the last seen epoch of partition topic0-0 to 0 since the associated topicId changed from null to ZrttkRSwQqWDqdGvD1rdpQ
2023-05-30 01:30:36,011 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-3, groupId=group_id] Resetting the last seen epoch of partition topic0-1 to 0 since the associated topicId changed from null to ZrttkRSwQqWDqdGvD1rdpQ
2023-05-30 01:30:36,011 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-3, groupId=group_id] Resetting the last seen epoch of partition topic0-2 to 0 since the associated topicId changed from null to ZrttkRSwQqWDqdGvD1rdpQ
2023-05-30 01:30:36,012 WARN  [id1-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-id1-1, groupId=id1] Error while fetching metadata with correlation id 2 : {topic2=LEADER_NOT_AVAILABLE}
2023-05-30 01:30:36,012 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 01:30:36,012 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-3, groupId=group_id] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 01:30:36,012 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-3, groupId=group_id] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
2023-05-30 01:30:36,013 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
2023-05-30 01:30:36,013 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] (Re-)joining group
2023-05-30 01:30:36,013 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-3, groupId=group_id] (Re-)joining group
2023-05-30 01:30:36,014 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] (Re-)joining group
2023-05-30 01:30:36,022 INFO  [main] com.yusufu.awesomespring.AwesomeSpringApplication : Started AwesomeSpringApplication in 6.172 seconds (process running for 6.823)
2023-05-30 01:30:36,039 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-3, groupId=group_id] Request joining group due to: need to re-join with the given member-id: consumer-group_id-3-3a1dd290-a606-4cd1-95c6-36eb16bb39a5
2023-05-30 01:30:36,039 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Request joining group due to: need to re-join with the given member-id: consumer-id1-1-db65c47c-6768-4887-94ed-a28e8c7be15b
2023-05-30 01:30:36,039 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Request joining group due to: need to re-join with the given member-id: consumer-group_id-2-2f4408f5-375f-4d1b-961f-4010ee64308e
2023-05-30 01:30:36,040 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-05-30 01:30:36,040 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-3, groupId=group_id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-05-30 01:30:36,040 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-05-30 01:30:36,040 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] (Re-)joining group
2023-05-30 01:30:36,040 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-3, groupId=group_id] (Re-)joining group
2023-05-30 01:30:36,040 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] (Re-)joining group
2023-05-30 01:30:36,046 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Successfully joined group with generation Generation{generationId=1, memberId='consumer-id1-1-db65c47c-6768-4887-94ed-a28e8c7be15b', protocol='range'}
2023-05-30 01:30:36,048 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Successfully joined group with generation Generation{generationId=9, memberId='consumer-group_id-2-2f4408f5-375f-4d1b-961f-4010ee64308e', protocol='range'}
2023-05-30 01:30:36,048 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-3, groupId=group_id] Successfully joined group with generation Generation{generationId=9, memberId='consumer-group_id-3-3a1dd290-a606-4cd1-95c6-36eb16bb39a5', protocol='range'}
2023-05-30 01:30:36,055 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting the last seen epoch of partition topic0-0 to 0 since the associated topicId changed from null to ZrttkRSwQqWDqdGvD1rdpQ
2023-05-30 01:30:36,055 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting the last seen epoch of partition topic0-2 to 0 since the associated topicId changed from null to ZrttkRSwQqWDqdGvD1rdpQ
2023-05-30 01:30:36,055 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting the last seen epoch of partition topic0-1 to 0 since the associated topicId changed from null to ZrttkRSwQqWDqdGvD1rdpQ
2023-05-30 01:30:36,057 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Finished assignment for group at generation 9: {consumer-group_id-2-2f4408f5-375f-4d1b-961f-4010ee64308e=Assignment(partitions=[topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9]), consumer-group_id-3-3a1dd290-a606-4cd1-95c6-36eb16bb39a5=Assignment(partitions=[topic0-0, topic0-1, topic0-2])}
2023-05-30 01:30:36,066 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Successfully synced group in generation Generation{generationId=9, memberId='consumer-group_id-2-2f4408f5-375f-4d1b-961f-4010ee64308e', protocol='range'}
2023-05-30 01:30:36,066 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-3, groupId=group_id] Successfully synced group in generation Generation{generationId=9, memberId='consumer-group_id-3-3a1dd290-a606-4cd1-95c6-36eb16bb39a5', protocol='range'}
2023-05-30 01:30:36,067 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-3, groupId=group_id] Notifying assignor about the new Assignment(partitions=[topic0-0, topic0-1, topic0-2])
2023-05-30 01:30:36,067 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Notifying assignor about the new Assignment(partitions=[topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9])
2023-05-30 01:30:36,070 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Adding newly assigned partitions: topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9
2023-05-30 01:30:36,070 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-3, groupId=group_id] Adding newly assigned partitions: topic0-0, topic0-1, topic0-2
2023-05-30 01:30:36,081 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-3, groupId=group_id] Found no committed offset for partition topic0-0
2023-05-30 01:30:36,081 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Found no committed offset for partition topic1-1
2023-05-30 01:30:36,082 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Found no committed offset for partition topic1-0
2023-05-30 01:30:36,082 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-3, groupId=group_id] Found no committed offset for partition topic0-2
2023-05-30 01:30:36,082 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Found no committed offset for partition topic1-3
2023-05-30 01:30:36,082 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-3, groupId=group_id] Found no committed offset for partition topic0-1
2023-05-30 01:30:36,082 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Found no committed offset for partition topic1-2
2023-05-30 01:30:36,082 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Found no committed offset for partition topic1-9
2023-05-30 01:30:36,082 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Found no committed offset for partition topic1-8
2023-05-30 01:30:36,082 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Found no committed offset for partition topic1-5
2023-05-30 01:30:36,082 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Found no committed offset for partition topic1-4
2023-05-30 01:30:36,082 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Found no committed offset for partition topic1-7
2023-05-30 01:30:36,082 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Found no committed offset for partition topic1-6
2023-05-30 01:30:36,094 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-group_id-3, groupId=group_id] Resetting offset for partition topic0-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:30:36,094 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting offset for partition topic1-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:30:36,095 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting offset for partition topic1-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:30:36,095 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-group_id-3, groupId=group_id] Resetting offset for partition topic0-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:30:36,095 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting offset for partition topic1-3 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:30:36,095 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-group_id-3, groupId=group_id] Resetting offset for partition topic0-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:30:36,095 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting offset for partition topic1-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:30:36,095 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting offset for partition topic1-9 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:30:36,096 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting offset for partition topic1-8 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:30:36,096 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting offset for partition topic1-5 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:30:36,096 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting offset for partition topic1-4 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:30:36,096 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting offset for partition topic1-7 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:30:36,096 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : group_id: partitions assigned: [topic0-0, topic0-1, topic0-2]
2023-05-30 01:30:36,096 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting offset for partition topic1-6 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:30:36,096 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : group_id: partitions assigned: [topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9]
2023-05-30 01:30:36,129 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-0 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 01:30:36,129 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Finished assignment for group at generation 1: {consumer-id1-1-db65c47c-6768-4887-94ed-a28e8c7be15b=Assignment(partitions=[topic2-0])}
2023-05-30 01:30:36,134 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Successfully synced group in generation Generation{generationId=1, memberId='consumer-id1-1-db65c47c-6768-4887-94ed-a28e8c7be15b', protocol='range'}
2023-05-30 01:30:36,134 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Notifying assignor about the new Assignment(partitions=[topic2-0])
2023-05-30 01:30:36,134 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Adding newly assigned partitions: topic2-0
2023-05-30 01:30:36,137 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-0
2023-05-30 01:30:36,140 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:30:36,140 INFO  [id1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : id1: partitions assigned: [topic2-0]
2023-05-30 01:31:52,163 INFO  [http-nio-8080-exec-1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-05-30 01:31:52,960 INFO  [http-nio-8080-exec-4] org.springdoc.api.AbstractOpenApiResource : Init duration for springdoc-openapi is: 243 ms
2023-05-30 01:32:03,712 INFO  [http-nio-8080-exec-5] org.apache.kafka.clients.producer.ProducerConfig : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 10
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2023-05-30 01:32:03,722 INFO  [http-nio-8080-exec-5] org.apache.kafka.clients.producer.KafkaProducer : [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-05-30 01:32:03,736 INFO  [http-nio-8080-exec-5] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 01:32:03,736 INFO  [http-nio-8080-exec-5] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 01:32:03,736 INFO  [http-nio-8080-exec-5] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685424723736
2023-05-30 01:32:03,759 WARN  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Error while fetching metadata with correlation id 1 : {yusufu-topic=LEADER_NOT_AVAILABLE}
2023-05-30 01:32:03,760 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 01:32:03,760 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.producer.internals.TransactionManager : [Producer clientId=producer-1] ProducerId set to 3 with epoch 0
2023-05-30 01:32:03,867 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition yusufu-topic-0 to 0 since the associated topicId changed from null to guITAcUUSKe3RoPLmcgUVQ
2023-05-30 01:37:57,971 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Revoke previously assigned partitions topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9
2023-05-30 01:37:57,971 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-3, groupId=group_id] Revoke previously assigned partitions topic0-0, topic0-1, topic0-2
2023-05-30 01:37:57,971 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Revoke previously assigned partitions topic2-0
2023-05-30 01:37:57,971 INFO  [id1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : id1: partitions revoked: [topic2-0]
2023-05-30 01:37:57,971 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : group_id: partitions revoked: [topic0-0, topic0-1, topic0-2]
2023-05-30 01:37:57,971 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : group_id: partitions revoked: [topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9]
2023-05-30 01:37:57,974 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-3, groupId=group_id] Member consumer-group_id-3-3a1dd290-a606-4cd1-95c6-36eb16bb39a5 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2023-05-30 01:37:57,974 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Member consumer-group_id-2-2f4408f5-375f-4d1b-961f-4010ee64308e sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2023-05-30 01:37:57,974 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Member consumer-id1-1-db65c47c-6768-4887-94ed-a28e8c7be15b sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2023-05-30 01:37:57,974 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-3, groupId=group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 01:37:57,974 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 01:37:57,974 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 01:37:57,974 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 01:37:57,974 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-3, groupId=group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 01:37:57,975 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-group_id-3, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
2023-05-30 01:37:57,975 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-id1-1, groupId=id1] Unsubscribed all topics or patterns and assigned partitions
2023-05-30 01:37:57,975 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 01:37:57,975 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-group_id-2, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
2023-05-30 01:37:57,975 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 01:37:57,975 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 01:37:57,975 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-3, groupId=group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 01:37:57,975 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-2, groupId=group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 01:37:57,975 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 01:37:57,975 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-group_id-3, groupId=group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 01:37:57,979 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 01:37:57,979 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 01:37:57,979 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 01:37:57,981 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 01:37:57,981 INFO  [id1-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 01:37:57,981 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 01:37:57,981 INFO  [id1-0-C-1] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 01:37:57,981 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 01:37:57,982 INFO  [id1-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 01:37:57,985 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.utils.AppInfoParser : App info kafka.consumer for consumer-group_id-3 unregistered
2023-05-30 01:37:57,986 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : group_id: Consumer stopped
2023-05-30 01:37:57,987 INFO  [id1-0-C-1] org.apache.kafka.common.utils.AppInfoParser : App info kafka.consumer for consumer-id1-1 unregistered
2023-05-30 01:37:57,987 INFO  [id1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : id1: Consumer stopped
2023-05-30 01:37:57,987 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.utils.AppInfoParser : App info kafka.consumer for consumer-group_id-2 unregistered
2023-05-30 01:37:57,987 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : group_id: Consumer stopped
2023-05-30 01:37:58,012 INFO  [SpringApplicationShutdownHook] org.apache.kafka.clients.producer.KafkaProducer : [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2023-05-30 01:37:58,015 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 01:37:58,015 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 01:37:58,015 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 01:37:58,015 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.utils.AppInfoParser : App info kafka.producer for producer-1 unregistered
2023-05-30 01:37:58,016 INFO  [SpringApplicationShutdownHook] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-05-30 01:37:58,176 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Shutdown initiated...
2023-05-30 01:37:58,187 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Shutdown completed.
2023-05-30 01:38:01,615 INFO  [main] com.yusufu.awesomespring.AwesomeSpringApplication : Starting AwesomeSpringApplication using Java 18.0.2.1 with PID 23736 (C:\Users\yusufu\IdeaProjects\AwesomeSpring\build\classes\java\main started by yusufu in C:\Users\yusufu\IdeaProjects\AwesomeSpring)
2023-05-30 01:38:01,617 DEBUG [main] com.yusufu.awesomespring.AwesomeSpringApplication : Running with Spring Boot v3.1.0, Spring v6.0.9
2023-05-30 01:38:01,618 INFO  [main] com.yusufu.awesomespring.AwesomeSpringApplication : No active profile set, falling back to 1 default profile: "default"
2023-05-30 01:38:02,372 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-05-30 01:38:02,428 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 49 ms. Found 2 JPA repository interfaces.
2023-05-30 01:38:02,999 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 8080 (http)
2023-05-30 01:38:03,012 INFO  [main] org.apache.catalina.core.StandardService : Starting service [Tomcat]
2023-05-30 01:38:03,013 INFO  [main] org.apache.catalina.core.StandardEngine : Starting Servlet engine: [Apache Tomcat/10.1.8]
2023-05-30 01:38:03,111 INFO  [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] : Initializing Spring embedded WebApplicationContext
2023-05-30 01:38:03,112 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1437 ms
2023-05-30 01:38:03,141 INFO  [main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Starting...
2023-05-30 01:38:03,342 INFO  [main] com.zaxxer.hikari.pool.HikariPool : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2023-05-30 01:38:03,344 INFO  [main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Start completed.
2023-05-30 01:38:03,354 INFO  [main] org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration : H2 console available at '/h2'. Database available at 'jdbc:h2:mem:testdb'
2023-05-30 01:38:03,826 INFO  [main] org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-05-30 01:38:04,731 INFO  [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-05-30 01:38:05,203 WARN  [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-05-30 01:38:06,101 INFO  [main] org.apache.kafka.clients.admin.AdminClientConfig : AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-05-30 01:38:06,169 WARN  [main] org.apache.kafka.clients.admin.AdminClientConfig : These configurations '[value.serializer, key.serializer]' were supplied but are not used yet.
2023-05-30 01:38:06,170 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 01:38:06,170 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 01:38:06,171 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685425086169
2023-05-30 01:38:06,512 INFO  [main] org.springframework.kafka.core.KafkaAdmin : Topic 'topic2' exists but has a different partition count: 1 not 10, increasing if the broker supports it
2023-05-30 01:38:06,648 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.utils.AppInfoParser : App info kafka.admin.client for adminclient-1 unregistered
2023-05-30 01:38:06,656 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 01:38:06,656 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 01:38:06,656 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 01:38:06,742 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer : Tomcat started on port(s): 8080 (http) with context path ''
2023-05-30 01:38:06,772 INFO  [main] org.apache.kafka.clients.consumer.ConsumerConfig : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-id1-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = id1
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-05-30 01:38:06,809 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 01:38:06,809 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 01:38:06,809 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685425086809
2023-05-30 01:38:06,810 INFO  [main] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-id1-1, groupId=id1] Subscribed to topic(s): topic2
2023-05-30 01:38:06,817 INFO  [main] org.apache.kafka.clients.consumer.ConsumerConfig : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-yusufu_group_id-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = yusufu_group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-05-30 01:38:06,824 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 01:38:06,824 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 01:38:06,824 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685425086824
2023-05-30 01:38:06,825 INFO  [main] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Subscribed to topic(s): topic1
2023-05-30 01:38:06,830 INFO  [main] org.apache.kafka.clients.consumer.ConsumerConfig : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-yusufu_group_id-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = yusufu_group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-05-30 01:38:06,838 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-0 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 01:38:06,838 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-0 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:38:06,839 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-5 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 01:38:06,839 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-5 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:38:06,839 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-8 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 01:38:06,839 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-8 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:38:06,839 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-2 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 01:38:06,839 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-2 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:38:06,839 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-9 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:38:06,839 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-9 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 01:38:06,839 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-1 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:38:06,840 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-1 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 01:38:06,840 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-4 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:38:06,840 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 01:38:06,840 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-4 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 01:38:06,840 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-6 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:38:06,840 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 01:38:06,840 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-6 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 01:38:06,840 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-7 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:38:06,840 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685425086840
2023-05-30 01:38:06,840 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-7 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 01:38:06,840 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-3 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:38:06,840 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-3 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 01:38:06,840 INFO  [main] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Subscribed to topic(s): topic0
2023-05-30 01:38:06,841 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 01:38:06,841 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 01:38:06,842 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
2023-05-30 01:38:06,842 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
2023-05-30 01:38:06,845 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] (Re-)joining group
2023-05-30 01:38:06,845 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] (Re-)joining group
2023-05-30 01:38:06,849 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic0-0 to 0 since the associated topicId changed from null to ZrttkRSwQqWDqdGvD1rdpQ
2023-05-30 01:38:06,849 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic0-2 to 0 since the associated topicId changed from null to ZrttkRSwQqWDqdGvD1rdpQ
2023-05-30 01:38:06,849 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic0-1 to 0 since the associated topicId changed from null to ZrttkRSwQqWDqdGvD1rdpQ
2023-05-30 01:38:06,850 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 01:38:06,850 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
2023-05-30 01:38:06,851 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] (Re-)joining group
2023-05-30 01:38:06,854 INFO  [main] com.yusufu.awesomespring.AwesomeSpringApplication : Started AwesomeSpringApplication in 5.852 seconds (process running for 6.449)
2023-05-30 01:38:06,865 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Request joining group due to: need to re-join with the given member-id: consumer-yusufu_group_id-3-7f1808f1-fc59-4869-8180-7ad57e1d1a97
2023-05-30 01:38:06,865 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Request joining group due to: need to re-join with the given member-id: consumer-id1-1-39eedf48-47c2-4261-8774-f3761eaf8b83
2023-05-30 01:38:06,865 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Request joining group due to: need to re-join with the given member-id: consumer-yusufu_group_id-2-f4a73ff6-e58e-40b2-add0-4e77cd3470e7
2023-05-30 01:38:06,866 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-05-30 01:38:06,866 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-05-30 01:38:06,866 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-05-30 01:38:06,866 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] (Re-)joining group
2023-05-30 01:38:06,866 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] (Re-)joining group
2023-05-30 01:38:06,866 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] (Re-)joining group
2023-05-30 01:38:06,872 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Successfully joined group with generation Generation{generationId=3, memberId='consumer-id1-1-39eedf48-47c2-4261-8774-f3761eaf8b83', protocol='range'}
2023-05-30 01:38:06,874 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Successfully joined group with generation Generation{generationId=1, memberId='consumer-yusufu_group_id-3-7f1808f1-fc59-4869-8180-7ad57e1d1a97', protocol='range'}
2023-05-30 01:38:06,874 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Successfully joined group with generation Generation{generationId=1, memberId='consumer-yusufu_group_id-2-f4a73ff6-e58e-40b2-add0-4e77cd3470e7', protocol='range'}
2023-05-30 01:38:06,875 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Finished assignment for group at generation 3: {consumer-id1-1-39eedf48-47c2-4261-8774-f3761eaf8b83=Assignment(partitions=[topic2-0, topic2-1, topic2-2, topic2-3, topic2-4, topic2-5, topic2-6, topic2-7, topic2-8, topic2-9])}
2023-05-30 01:38:06,880 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-0 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:38:06,880 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-5 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:38:06,880 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-8 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:38:06,880 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-2 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:38:06,881 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-9 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:38:06,881 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-1 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:38:06,881 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-4 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:38:06,881 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-6 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:38:06,881 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-7 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:38:06,881 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-3 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:38:06,882 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Finished assignment for group at generation 1: {consumer-yusufu_group_id-2-f4a73ff6-e58e-40b2-add0-4e77cd3470e7=Assignment(partitions=[topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9]), consumer-yusufu_group_id-3-7f1808f1-fc59-4869-8180-7ad57e1d1a97=Assignment(partitions=[topic0-0, topic0-1, topic0-2])}
2023-05-30 01:38:06,882 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Successfully synced group in generation Generation{generationId=3, memberId='consumer-id1-1-39eedf48-47c2-4261-8774-f3761eaf8b83', protocol='range'}
2023-05-30 01:38:06,883 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Notifying assignor about the new Assignment(partitions=[topic2-0, topic2-1, topic2-2, topic2-3, topic2-4, topic2-5, topic2-6, topic2-7, topic2-8, topic2-9])
2023-05-30 01:38:06,886 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Successfully synced group in generation Generation{generationId=1, memberId='consumer-yusufu_group_id-3-7f1808f1-fc59-4869-8180-7ad57e1d1a97', protocol='range'}
2023-05-30 01:38:06,886 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Successfully synced group in generation Generation{generationId=1, memberId='consumer-yusufu_group_id-2-f4a73ff6-e58e-40b2-add0-4e77cd3470e7', protocol='range'}
2023-05-30 01:38:06,886 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Notifying assignor about the new Assignment(partitions=[topic0-0, topic0-1, topic0-2])
2023-05-30 01:38:06,886 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Notifying assignor about the new Assignment(partitions=[topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9])
2023-05-30 01:38:06,886 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Adding newly assigned partitions: topic2-0, topic2-1, topic2-2, topic2-3, topic2-4, topic2-5, topic2-6, topic2-7, topic2-8, topic2-9
2023-05-30 01:38:06,886 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Adding newly assigned partitions: topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9
2023-05-30 01:38:06,886 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Adding newly assigned partitions: topic0-0, topic0-1, topic0-2
2023-05-30 01:38:06,894 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-1
2023-05-30 01:38:06,894 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Found no committed offset for partition topic0-0
2023-05-30 01:38:06,894 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-0
2023-05-30 01:38:06,894 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-2
2023-05-30 01:38:06,894 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Found no committed offset for partition topic0-2
2023-05-30 01:38:06,894 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-3
2023-05-30 01:38:06,895 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-1
2023-05-30 01:38:06,895 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Found no committed offset for partition topic0-1
2023-05-30 01:38:06,895 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-2
2023-05-30 01:38:06,895 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-4
2023-05-30 01:38:06,895 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-9
2023-05-30 01:38:06,895 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-3
2023-05-30 01:38:06,895 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-8
2023-05-30 01:38:06,895 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-0
2023-05-30 01:38:06,895 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-5
2023-05-30 01:38:06,895 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-9
2023-05-30 01:38:06,895 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-4
2023-05-30 01:38:06,895 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-7
2023-05-30 01:38:06,895 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-6
2023-05-30 01:38:06,895 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-6
2023-05-30 01:38:06,895 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-5
2023-05-30 01:38:06,895 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-8
2023-05-30 01:38:06,896 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-7
2023-05-30 01:38:06,905 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting offset for partition topic0-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:38:06,906 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting offset for partition topic0-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:38:06,906 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting offset for partition topic0-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:38:06,906 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:38:06,906 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:38:06,906 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:38:06,906 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-4 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:38:06,906 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:38:06,906 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-3 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:38:06,906 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-3 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:38:06,906 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:38:06,906 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : yusufu_group_id: partitions assigned: [topic0-0, topic0-1, topic0-2]
2023-05-30 01:38:06,906 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:38:06,906 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-9 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:38:06,907 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-9 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:38:06,907 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-6 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:38:06,907 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-5 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:38:06,907 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-8 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:38:06,907 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-8 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:38:06,907 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-5 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:38:06,907 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-7 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:38:06,907 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-4 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:38:06,907 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-7 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:38:06,907 INFO  [id1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : id1: partitions assigned: [topic2-0, topic2-1, topic2-2, topic2-3, topic2-4, topic2-5, topic2-6, topic2-7, topic2-8, topic2-9]
2023-05-30 01:38:06,907 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-6 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:38:06,907 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : yusufu_group_id: partitions assigned: [topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9]
2023-05-30 01:41:12,961 INFO  [http-nio-8080-exec-1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-05-30 01:41:13,010 INFO  [http-nio-8080-exec-1] org.apache.kafka.clients.producer.ProducerConfig : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 10
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2023-05-30 01:41:13,017 INFO  [http-nio-8080-exec-1] org.apache.kafka.clients.producer.KafkaProducer : [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-05-30 01:41:13,028 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 01:41:13,029 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 01:41:13,029 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685425273028
2023-05-30 01:41:13,037 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic0-0 to 0 since the associated topicId changed from null to ZrttkRSwQqWDqdGvD1rdpQ
2023-05-30 01:41:13,038 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic0-2 to 0 since the associated topicId changed from null to ZrttkRSwQqWDqdGvD1rdpQ
2023-05-30 01:41:13,038 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic0-1 to 0 since the associated topicId changed from null to ZrttkRSwQqWDqdGvD1rdpQ
2023-05-30 01:41:13,038 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 01:41:13,038 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.producer.internals.TransactionManager : [Producer clientId=producer-1] ProducerId set to 4 with epoch 0
2023-05-30 01:44:19,891 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-0 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:44:19,891 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-5 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:44:19,891 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-8 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:44:19,892 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-2 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:44:19,892 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-9 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:44:19,892 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-1 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:44:19,892 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-4 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:44:19,892 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-6 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:44:19,892 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-7 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:44:19,892 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-3 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:44:19,946 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.DefaultErrorHandler : Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for topic1-0@0
org.springframework.kafka.listener.ListenerExecutionFailedException: invokeHandler Failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:388)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:371)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: java.lang.IllegalStateException: No Acknowledgment available as an argument, the listener container must have a MANUAL AckMode to populate the Acknowledgment.
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:388)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:371)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	... 18 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [org.springframework.kafka.support.Acknowledgment] for GenericMessage [payload=deneme, headers={kafka_offset=0, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@7502042b, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedMessageKey=key1, kafka_receivedTopic=topic1, kafka_receivedTimestamp=1685425459895, kafka_groupId=yusufu_group_id}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:148)
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	... 17 common frames omitted
2023-05-30 01:46:13,046 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic0-0 to 0 since the associated topicId changed from null to ZrttkRSwQqWDqdGvD1rdpQ
2023-05-30 01:46:13,048 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic0-2 to 0 since the associated topicId changed from null to ZrttkRSwQqWDqdGvD1rdpQ
2023-05-30 01:46:13,048 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic0-1 to 0 since the associated topicId changed from null to ZrttkRSwQqWDqdGvD1rdpQ
2023-05-30 01:47:06,911 INFO  [id1-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-id1-1, groupId=id1] Node -1 disconnected.
2023-05-30 01:47:07,152 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Node -1 disconnected.
2023-05-30 01:47:07,152 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Node -1 disconnected.
2023-05-30 01:50:13,127 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient : [Producer clientId=producer-1] Node -1 disconnected.
2023-05-30 01:53:30,385 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Revoke previously assigned partitions topic2-0, topic2-1, topic2-2, topic2-3, topic2-4, topic2-5, topic2-6, topic2-7, topic2-8, topic2-9
2023-05-30 01:53:30,385 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Revoke previously assigned partitions topic0-0, topic0-1, topic0-2
2023-05-30 01:53:30,385 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Revoke previously assigned partitions topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9
2023-05-30 01:53:30,386 INFO  [id1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : id1: partitions revoked: [topic2-0, topic2-1, topic2-2, topic2-3, topic2-4, topic2-5, topic2-6, topic2-7, topic2-8, topic2-9]
2023-05-30 01:53:30,386 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : yusufu_group_id: partitions revoked: [topic0-0, topic0-1, topic0-2]
2023-05-30 01:53:30,386 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : yusufu_group_id: partitions revoked: [topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9]
2023-05-30 01:53:30,387 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Member consumer-id1-1-39eedf48-47c2-4261-8774-f3761eaf8b83 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2023-05-30 01:53:30,387 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Member consumer-yusufu_group_id-2-f4a73ff6-e58e-40b2-add0-4e77cd3470e7 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2023-05-30 01:53:30,387 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Member consumer-yusufu_group_id-3-7f1808f1-fc59-4869-8180-7ad57e1d1a97 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2023-05-30 01:53:30,388 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 01:53:30,388 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 01:53:30,388 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 01:53:30,388 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 01:53:30,388 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Unsubscribed all topics or patterns and assigned partitions
2023-05-30 01:53:30,388 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-id1-1, groupId=id1] Unsubscribed all topics or patterns and assigned partitions
2023-05-30 01:53:30,388 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 01:53:30,389 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 01:53:30,389 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 01:53:30,389 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 01:53:30,389 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 01:53:30,390 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 01:53:30,390 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Unsubscribed all topics or patterns and assigned partitions
2023-05-30 01:53:30,390 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 01:53:30,390 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 01:53:30,393 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 01:53:30,394 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 01:53:30,394 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 01:53:30,395 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 01:53:30,395 INFO  [id1-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 01:53:30,395 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 01:53:30,395 INFO  [id1-0-C-1] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 01:53:30,396 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 01:53:30,396 INFO  [id1-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 01:53:30,401 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.utils.AppInfoParser : App info kafka.consumer for consumer-yusufu_group_id-2 unregistered
2023-05-30 01:53:30,402 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : yusufu_group_id: Consumer stopped
2023-05-30 01:53:30,403 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.utils.AppInfoParser : App info kafka.consumer for consumer-yusufu_group_id-3 unregistered
2023-05-30 01:53:30,403 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : yusufu_group_id: Consumer stopped
2023-05-30 01:53:30,403 INFO  [id1-0-C-1] org.apache.kafka.common.utils.AppInfoParser : App info kafka.consumer for consumer-id1-1 unregistered
2023-05-30 01:53:30,403 INFO  [id1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : id1: Consumer stopped
2023-05-30 01:53:30,432 INFO  [SpringApplicationShutdownHook] org.apache.kafka.clients.producer.KafkaProducer : [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2023-05-30 01:53:30,435 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 01:53:30,435 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 01:53:30,435 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 01:53:30,435 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.utils.AppInfoParser : App info kafka.producer for producer-1 unregistered
2023-05-30 01:53:30,437 INFO  [SpringApplicationShutdownHook] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-05-30 01:53:30,592 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Shutdown initiated...
2023-05-30 01:53:30,601 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Shutdown completed.
2023-05-30 01:53:33,983 INFO  [main] com.yusufu.awesomespring.AwesomeSpringApplication : Starting AwesomeSpringApplication using Java 18.0.2.1 with PID 14704 (C:\Users\yusufu\IdeaProjects\AwesomeSpring\build\classes\java\main started by yusufu in C:\Users\yusufu\IdeaProjects\AwesomeSpring)
2023-05-30 01:53:33,985 DEBUG [main] com.yusufu.awesomespring.AwesomeSpringApplication : Running with Spring Boot v3.1.0, Spring v6.0.9
2023-05-30 01:53:33,985 INFO  [main] com.yusufu.awesomespring.AwesomeSpringApplication : No active profile set, falling back to 1 default profile: "default"
2023-05-30 01:53:34,715 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-05-30 01:53:34,767 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 45 ms. Found 2 JPA repository interfaces.
2023-05-30 01:53:35,425 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 8080 (http)
2023-05-30 01:53:35,436 INFO  [main] org.apache.catalina.core.StandardService : Starting service [Tomcat]
2023-05-30 01:53:35,437 INFO  [main] org.apache.catalina.core.StandardEngine : Starting Servlet engine: [Apache Tomcat/10.1.8]
2023-05-30 01:53:35,572 INFO  [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] : Initializing Spring embedded WebApplicationContext
2023-05-30 01:53:35,573 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1537 ms
2023-05-30 01:53:35,606 INFO  [main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Starting...
2023-05-30 01:53:35,820 INFO  [main] com.zaxxer.hikari.pool.HikariPool : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2023-05-30 01:53:35,824 INFO  [main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Start completed.
2023-05-30 01:53:35,833 INFO  [main] org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration : H2 console available at '/h2'. Database available at 'jdbc:h2:mem:testdb'
2023-05-30 01:53:36,395 INFO  [main] org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-05-30 01:53:37,611 INFO  [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-05-30 01:53:38,106 WARN  [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-05-30 01:53:39,045 INFO  [main] org.apache.kafka.clients.admin.AdminClientConfig : AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-05-30 01:53:39,114 WARN  [main] org.apache.kafka.clients.admin.AdminClientConfig : These configurations '[value.serializer, key.serializer]' were supplied but are not used yet.
2023-05-30 01:53:39,116 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 01:53:39,116 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 01:53:39,116 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685426019114
2023-05-30 01:53:39,486 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.utils.AppInfoParser : App info kafka.admin.client for adminclient-1 unregistered
2023-05-30 01:53:39,492 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 01:53:39,492 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 01:53:39,492 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 01:53:39,563 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer : Tomcat started on port(s): 8080 (http) with context path ''
2023-05-30 01:53:39,587 INFO  [main] org.apache.kafka.clients.consumer.ConsumerConfig : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-id1-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = id1
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-05-30 01:53:39,623 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 01:53:39,623 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 01:53:39,623 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685426019623
2023-05-30 01:53:39,625 INFO  [main] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-id1-1, groupId=id1] Subscribed to topic(s): topic2
2023-05-30 01:53:39,632 INFO  [main] org.apache.kafka.clients.consumer.ConsumerConfig : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-yusufu_group_id-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = yusufu_group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-05-30 01:53:39,639 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 01:53:39,639 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 01:53:39,639 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685426019638
2023-05-30 01:53:39,639 INFO  [main] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Subscribed to topic(s): topic1
2023-05-30 01:53:39,643 INFO  [main] org.apache.kafka.clients.consumer.ConsumerConfig : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-yusufu_group_id-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = yusufu_group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-05-30 01:53:39,652 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 01:53:39,652 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 01:53:39,652 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685426019651
2023-05-30 01:53:39,652 INFO  [main] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Subscribed to topic(s): topic0
2023-05-30 01:53:39,653 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-0 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 01:53:39,653 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-0 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:39,653 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-5 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 01:53:39,653 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-5 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:39,654 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-8 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 01:53:39,654 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-8 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:39,654 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-2 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 01:53:39,654 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-2 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:39,654 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-9 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 01:53:39,654 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-1 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 01:53:39,654 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-9 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:39,654 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-4 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 01:53:39,654 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-1 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:39,654 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-6 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 01:53:39,654 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-7 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 01:53:39,654 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-4 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:39,654 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-3 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 01:53:39,654 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-6 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:39,654 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-7 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:39,654 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-3 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:39,656 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 01:53:39,655 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 01:53:39,657 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
2023-05-30 01:53:39,657 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
2023-05-30 01:53:39,660 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] (Re-)joining group
2023-05-30 01:53:39,660 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] (Re-)joining group
2023-05-30 01:53:39,663 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic0-0 to 0 since the associated topicId changed from null to ZrttkRSwQqWDqdGvD1rdpQ
2023-05-30 01:53:39,663 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic0-2 to 0 since the associated topicId changed from null to ZrttkRSwQqWDqdGvD1rdpQ
2023-05-30 01:53:39,664 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic0-1 to 0 since the associated topicId changed from null to ZrttkRSwQqWDqdGvD1rdpQ
2023-05-30 01:53:39,664 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 01:53:39,664 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
2023-05-30 01:53:39,665 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] (Re-)joining group
2023-05-30 01:53:39,668 INFO  [main] com.yusufu.awesomespring.AwesomeSpringApplication : Started AwesomeSpringApplication in 6.223 seconds (process running for 6.864)
2023-05-30 01:53:39,681 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Request joining group due to: need to re-join with the given member-id: consumer-yusufu_group_id-3-1932f7a4-f055-486c-a477-de0260582b97
2023-05-30 01:53:39,681 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Request joining group due to: need to re-join with the given member-id: consumer-yusufu_group_id-2-e9aa5774-3af7-457f-add4-8a4c82871b5b
2023-05-30 01:53:39,681 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Request joining group due to: need to re-join with the given member-id: consumer-id1-1-6ac8f403-1f68-4e94-8440-10328c980cff
2023-05-30 01:53:39,682 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-05-30 01:53:39,682 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-05-30 01:53:39,682 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-05-30 01:53:39,682 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] (Re-)joining group
2023-05-30 01:53:39,682 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] (Re-)joining group
2023-05-30 01:53:39,682 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] (Re-)joining group
2023-05-30 01:53:39,686 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Successfully joined group with generation Generation{generationId=5, memberId='consumer-id1-1-6ac8f403-1f68-4e94-8440-10328c980cff', protocol='range'}
2023-05-30 01:53:39,687 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Successfully joined group with generation Generation{generationId=3, memberId='consumer-yusufu_group_id-3-1932f7a4-f055-486c-a477-de0260582b97', protocol='range'}
2023-05-30 01:53:39,687 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Successfully joined group with generation Generation{generationId=3, memberId='consumer-yusufu_group_id-2-e9aa5774-3af7-457f-add4-8a4c82871b5b', protocol='range'}
2023-05-30 01:53:39,690 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Finished assignment for group at generation 5: {consumer-id1-1-6ac8f403-1f68-4e94-8440-10328c980cff=Assignment(partitions=[topic2-0, topic2-1, topic2-2, topic2-3, topic2-4, topic2-5, topic2-6, topic2-7, topic2-8, topic2-9])}
2023-05-30 01:53:39,694 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-0 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:39,695 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-5 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:39,695 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-8 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:39,695 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-2 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:39,695 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-9 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:39,695 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-1 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:39,695 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-4 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:39,695 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-6 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:39,695 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-7 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:39,695 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-3 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:39,696 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Finished assignment for group at generation 3: {consumer-yusufu_group_id-2-e9aa5774-3af7-457f-add4-8a4c82871b5b=Assignment(partitions=[topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9]), consumer-yusufu_group_id-3-1932f7a4-f055-486c-a477-de0260582b97=Assignment(partitions=[topic0-0, topic0-1, topic0-2])}
2023-05-30 01:53:39,698 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Successfully synced group in generation Generation{generationId=5, memberId='consumer-id1-1-6ac8f403-1f68-4e94-8440-10328c980cff', protocol='range'}
2023-05-30 01:53:39,699 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Notifying assignor about the new Assignment(partitions=[topic2-0, topic2-1, topic2-2, topic2-3, topic2-4, topic2-5, topic2-6, topic2-7, topic2-8, topic2-9])
2023-05-30 01:53:39,701 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Successfully synced group in generation Generation{generationId=3, memberId='consumer-yusufu_group_id-2-e9aa5774-3af7-457f-add4-8a4c82871b5b', protocol='range'}
2023-05-30 01:53:39,701 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Successfully synced group in generation Generation{generationId=3, memberId='consumer-yusufu_group_id-3-1932f7a4-f055-486c-a477-de0260582b97', protocol='range'}
2023-05-30 01:53:39,702 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Notifying assignor about the new Assignment(partitions=[topic0-0, topic0-1, topic0-2])
2023-05-30 01:53:39,702 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Notifying assignor about the new Assignment(partitions=[topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9])
2023-05-30 01:53:39,704 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Adding newly assigned partitions: topic0-0, topic0-1, topic0-2
2023-05-30 01:53:39,704 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Adding newly assigned partitions: topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9
2023-05-30 01:53:39,704 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Adding newly assigned partitions: topic2-0, topic2-1, topic2-2, topic2-3, topic2-4, topic2-5, topic2-6, topic2-7, topic2-8, topic2-9
2023-05-30 01:53:39,714 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-1
2023-05-30 01:53:39,714 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-2
2023-05-30 01:53:39,715 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-3
2023-05-30 01:53:39,715 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-1
2023-05-30 01:53:39,715 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-2
2023-05-30 01:53:39,715 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-4
2023-05-30 01:53:39,715 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-9
2023-05-30 01:53:39,715 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-3
2023-05-30 01:53:39,715 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-8
2023-05-30 01:53:39,715 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-0
2023-05-30 01:53:39,715 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-5
2023-05-30 01:53:39,715 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-9
2023-05-30 01:53:39,715 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-4
2023-05-30 01:53:39,715 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-6
2023-05-30 01:53:39,715 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-7
2023-05-30 01:53:39,715 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-5
2023-05-30 01:53:39,716 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-6
2023-05-30 01:53:39,716 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-8
2023-05-30 01:53:39,716 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-7
2023-05-30 01:53:39,718 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Setting offset for partition topic1-0 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
2023-05-30 01:53:39,718 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Setting offset for partition topic0-0 to the committed offset FetchPosition{offset=11, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
2023-05-30 01:53:39,719 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Setting offset for partition topic0-2 to the committed offset FetchPosition{offset=12, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
2023-05-30 01:53:39,719 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Setting offset for partition topic0-1 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
2023-05-30 01:53:39,720 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : yusufu_group_id: partitions assigned: [topic0-0, topic0-1, topic0-2]
2023-05-30 01:53:39,731 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:53:39,731 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:53:39,732 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:53:39,732 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-3 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:53:39,732 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-4 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:53:39,732 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:53:39,732 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-3 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:53:39,732 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-9 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:53:39,732 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-8 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:53:39,732 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:53:39,732 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-5 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:53:39,732 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-9 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:53:39,732 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-4 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:53:39,732 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-6 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:53:39,732 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-7 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:53:39,733 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-6 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:53:39,733 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-5 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:53:39,733 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-8 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:53:39,733 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-7 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 01:53:39,733 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : yusufu_group_id: partitions assigned: [topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9]
2023-05-30 01:53:39,733 INFO  [id1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : id1: partitions assigned: [topic2-0, topic2-1, topic2-2, topic2-3, topic2-4, topic2-5, topic2-6, topic2-7, topic2-8, topic2-9]
2023-05-30 01:53:59,513 INFO  [http-nio-8080-exec-1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-05-30 01:53:59,562 INFO  [http-nio-8080-exec-1] org.apache.kafka.clients.producer.ProducerConfig : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 10
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2023-05-30 01:53:59,570 INFO  [http-nio-8080-exec-1] org.apache.kafka.clients.producer.KafkaProducer : [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-05-30 01:53:59,581 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 01:53:59,581 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 01:53:59,581 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685426039581
2023-05-30 01:53:59,590 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-0 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:59,590 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-5 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:59,590 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-8 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:59,590 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-2 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:59,590 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-9 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:59,590 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-1 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:59,591 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-4 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:59,591 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-6 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:59,591 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-7 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:59,591 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-3 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 01:53:59,592 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 01:53:59,593 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.producer.internals.TransactionManager : [Producer clientId=producer-1] ProducerId set to 5 with epoch 0
2023-05-30 01:53:59,669 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 1 for partition topic1-0
2023-05-30 01:53:59,670 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,java.lang.String,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@36e98434]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 01:54:00,199 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 1 for partition topic1-0
2023-05-30 01:54:00,199 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,java.lang.String,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@36e98434]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 01:54:00,730 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 1 for partition topic1-0
2023-05-30 01:54:00,730 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,java.lang.String,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@36e98434]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 01:54:01,229 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 1 for partition topic1-0
2023-05-30 01:54:01,230 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,java.lang.String,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@36e98434]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 01:54:01,741 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 1 for partition topic1-0
2023-05-30 01:54:01,741 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,java.lang.String,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@36e98434]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 01:54:02,253 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 1 for partition topic1-0
2023-05-30 01:54:02,254 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,java.lang.String,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@36e98434]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 01:54:02,780 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 1 for partition topic1-0
2023-05-30 01:54:02,780 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,java.lang.String,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@36e98434]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 01:54:03,279 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 1 for partition topic1-0
2023-05-30 01:54:03,279 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,java.lang.String,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@36e98434]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 01:54:03,791 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 1 for partition topic1-0
2023-05-30 01:54:03,791 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,java.lang.String,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@36e98434]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 01:54:04,296 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.DefaultErrorHandler : Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for topic1-0@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,java.lang.String,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@36e98434]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 02:00:25,122 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Revoke previously assigned partitions topic0-0, topic0-1, topic0-2
2023-05-30 02:00:25,122 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Revoke previously assigned partitions topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9
2023-05-30 02:00:25,122 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Revoke previously assigned partitions topic2-0, topic2-1, topic2-2, topic2-3, topic2-4, topic2-5, topic2-6, topic2-7, topic2-8, topic2-9
2023-05-30 02:00:25,123 INFO  [id1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : id1: partitions revoked: [topic2-0, topic2-1, topic2-2, topic2-3, topic2-4, topic2-5, topic2-6, topic2-7, topic2-8, topic2-9]
2023-05-30 02:00:25,123 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : yusufu_group_id: partitions revoked: [topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9]
2023-05-30 02:00:25,123 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : yusufu_group_id: partitions revoked: [topic0-0, topic0-1, topic0-2]
2023-05-30 02:00:25,125 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Member consumer-yusufu_group_id-2-e9aa5774-3af7-457f-add4-8a4c82871b5b sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2023-05-30 02:00:25,125 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Member consumer-id1-1-6ac8f403-1f68-4e94-8440-10328c980cff sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2023-05-30 02:00:25,125 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Member consumer-yusufu_group_id-3-1932f7a4-f055-486c-a477-de0260582b97 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2023-05-30 02:00:25,126 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 02:00:25,126 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 02:00:25,126 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 02:00:25,126 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 02:00:25,126 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 02:00:25,126 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 02:00:25,126 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Unsubscribed all topics or patterns and assigned partitions
2023-05-30 02:00:25,126 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Unsubscribed all topics or patterns and assigned partitions
2023-05-30 02:00:25,126 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-id1-1, groupId=id1] Unsubscribed all topics or patterns and assigned partitions
2023-05-30 02:00:25,126 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 02:00:25,126 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 02:00:25,126 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 02:00:25,126 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 02:00:25,126 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 02:00:25,126 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 02:00:25,131 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 02:00:25,132 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 02:00:25,132 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 02:00:25,132 INFO  [id1-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 02:00:25,133 INFO  [id1-0-C-1] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 02:00:25,134 INFO  [id1-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 02:00:25,135 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 02:00:25,135 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 02:00:25,136 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 02:00:25,136 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.utils.AppInfoParser : App info kafka.consumer for consumer-yusufu_group_id-2 unregistered
2023-05-30 02:00:25,137 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : yusufu_group_id: Consumer stopped
2023-05-30 02:00:25,138 INFO  [id1-0-C-1] org.apache.kafka.common.utils.AppInfoParser : App info kafka.consumer for consumer-id1-1 unregistered
2023-05-30 02:00:25,138 INFO  [id1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : id1: Consumer stopped
2023-05-30 02:00:25,139 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.utils.AppInfoParser : App info kafka.consumer for consumer-yusufu_group_id-3 unregistered
2023-05-30 02:00:25,139 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : yusufu_group_id: Consumer stopped
2023-05-30 02:00:25,167 INFO  [SpringApplicationShutdownHook] org.apache.kafka.clients.producer.KafkaProducer : [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2023-05-30 02:00:25,170 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 02:00:25,170 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 02:00:25,170 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 02:00:25,170 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.utils.AppInfoParser : App info kafka.producer for producer-1 unregistered
2023-05-30 02:00:25,172 INFO  [SpringApplicationShutdownHook] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-05-30 02:00:25,330 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Shutdown initiated...
2023-05-30 02:00:25,340 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Shutdown completed.
2023-05-30 02:00:28,586 INFO  [main] com.yusufu.awesomespring.AwesomeSpringApplication : Starting AwesomeSpringApplication using Java 18.0.2.1 with PID 18908 (C:\Users\yusufu\IdeaProjects\AwesomeSpring\build\classes\java\main started by yusufu in C:\Users\yusufu\IdeaProjects\AwesomeSpring)
2023-05-30 02:00:28,587 DEBUG [main] com.yusufu.awesomespring.AwesomeSpringApplication : Running with Spring Boot v3.1.0, Spring v6.0.9
2023-05-30 02:00:28,588 INFO  [main] com.yusufu.awesomespring.AwesomeSpringApplication : No active profile set, falling back to 1 default profile: "default"
2023-05-30 02:00:29,333 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-05-30 02:00:29,393 INFO  [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 53 ms. Found 2 JPA repository interfaces.
2023-05-30 02:00:29,959 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 8080 (http)
2023-05-30 02:00:29,969 INFO  [main] org.apache.catalina.core.StandardService : Starting service [Tomcat]
2023-05-30 02:00:29,969 INFO  [main] org.apache.catalina.core.StandardEngine : Starting Servlet engine: [Apache Tomcat/10.1.8]
2023-05-30 02:00:30,068 INFO  [main] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] : Initializing Spring embedded WebApplicationContext
2023-05-30 02:00:30,069 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1428 ms
2023-05-30 02:00:30,100 INFO  [main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Starting...
2023-05-30 02:00:30,315 INFO  [main] com.zaxxer.hikari.pool.HikariPool : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2023-05-30 02:00:30,317 INFO  [main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Start completed.
2023-05-30 02:00:30,328 INFO  [main] org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration : H2 console available at '/h2'. Database available at 'jdbc:h2:mem:testdb'
2023-05-30 02:00:30,840 INFO  [main] org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-05-30 02:00:31,765 INFO  [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-05-30 02:00:32,209 WARN  [main] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-05-30 02:00:33,004 INFO  [main] org.apache.kafka.clients.admin.AdminClientConfig : AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-05-30 02:00:33,071 WARN  [main] org.apache.kafka.clients.admin.AdminClientConfig : These configurations '[value.serializer, key.serializer]' were supplied but are not used yet.
2023-05-30 02:00:33,073 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 02:00:33,073 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 02:00:33,073 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685426433072
2023-05-30 02:00:33,412 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.utils.AppInfoParser : App info kafka.admin.client for adminclient-1 unregistered
2023-05-30 02:00:33,418 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 02:00:33,418 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 02:00:33,419 INFO  [kafka-admin-client-thread | adminclient-1] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 02:00:33,483 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer : Tomcat started on port(s): 8080 (http) with context path ''
2023-05-30 02:00:33,505 INFO  [main] org.apache.kafka.clients.consumer.ConsumerConfig : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-id1-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = id1
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-05-30 02:00:33,547 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 02:00:33,547 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 02:00:33,547 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685426433547
2023-05-30 02:00:33,548 INFO  [main] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-id1-1, groupId=id1] Subscribed to topic(s): topic2
2023-05-30 02:00:33,555 INFO  [main] org.apache.kafka.clients.consumer.ConsumerConfig : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-yusufu_group_id-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = yusufu_group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-05-30 02:00:33,560 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 02:00:33,560 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 02:00:33,560 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685426433560
2023-05-30 02:00:33,561 INFO  [main] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Subscribed to topic(s): topic1
2023-05-30 02:00:33,564 INFO  [main] org.apache.kafka.clients.consumer.ConsumerConfig : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-yusufu_group_id-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = yusufu_group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2023-05-30 02:00:33,573 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 02:00:33,574 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 02:00:33,574 INFO  [main] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685426433573
2023-05-30 02:00:33,574 INFO  [main] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Subscribed to topic(s): topic0
2023-05-30 02:00:33,580 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-0 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:33,580 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-0 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 02:00:33,581 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-5 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:33,581 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-5 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 02:00:33,581 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-8 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:33,581 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-8 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 02:00:33,581 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-2 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:33,582 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-2 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 02:00:33,582 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-9 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:33,582 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-9 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 02:00:33,582 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-1 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:33,582 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-1 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 02:00:33,582 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-4 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:33,582 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-4 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 02:00:33,582 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-6 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:33,582 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-6 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 02:00:33,582 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-7 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:33,582 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-7 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 02:00:33,582 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-3 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:33,583 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting the last seen epoch of partition topic2-3 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 02:00:33,584 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 02:00:33,584 INFO  [id1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-id1-1, groupId=id1] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 02:00:33,585 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic0-0 to 0 since the associated topicId changed from null to ZrttkRSwQqWDqdGvD1rdpQ
2023-05-30 02:00:33,585 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic0-2 to 0 since the associated topicId changed from null to ZrttkRSwQqWDqdGvD1rdpQ
2023-05-30 02:00:33,586 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic0-1 to 0 since the associated topicId changed from null to ZrttkRSwQqWDqdGvD1rdpQ
2023-05-30 02:00:33,586 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
2023-05-30 02:00:33,586 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 02:00:33,586 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
2023-05-30 02:00:33,586 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
2023-05-30 02:00:33,588 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] (Re-)joining group
2023-05-30 02:00:33,588 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] (Re-)joining group
2023-05-30 02:00:33,588 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] (Re-)joining group
2023-05-30 02:00:33,591 INFO  [main] com.yusufu.awesomespring.AwesomeSpringApplication : Started AwesomeSpringApplication in 5.544 seconds (process running for 6.148)
2023-05-30 02:00:33,611 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Request joining group due to: need to re-join with the given member-id: consumer-id1-1-0d2773dc-8d59-4961-97d0-0667ee432352
2023-05-30 02:00:33,611 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Request joining group due to: need to re-join with the given member-id: consumer-yusufu_group_id-3-376d05d7-3fd8-4d78-9ace-5c155fb546d8
2023-05-30 02:00:33,611 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Request joining group due to: need to re-join with the given member-id: consumer-yusufu_group_id-2-b07bf964-b406-4b7f-9398-c7eb5bd2025c
2023-05-30 02:00:33,611 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-05-30 02:00:33,611 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-05-30 02:00:33,611 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] (Re-)joining group
2023-05-30 02:00:33,611 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2023-05-30 02:00:33,611 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] (Re-)joining group
2023-05-30 02:00:33,611 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] (Re-)joining group
2023-05-30 02:00:33,617 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Successfully joined group with generation Generation{generationId=5, memberId='consumer-yusufu_group_id-2-b07bf964-b406-4b7f-9398-c7eb5bd2025c', protocol='range'}
2023-05-30 02:00:33,617 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Successfully joined group with generation Generation{generationId=7, memberId='consumer-id1-1-0d2773dc-8d59-4961-97d0-0667ee432352', protocol='range'}
2023-05-30 02:00:33,617 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Successfully joined group with generation Generation{generationId=5, memberId='consumer-yusufu_group_id-3-376d05d7-3fd8-4d78-9ace-5c155fb546d8', protocol='range'}
2023-05-30 02:00:33,621 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Finished assignment for group at generation 7: {consumer-id1-1-0d2773dc-8d59-4961-97d0-0667ee432352=Assignment(partitions=[topic2-0, topic2-1, topic2-2, topic2-3, topic2-4, topic2-5, topic2-6, topic2-7, topic2-8, topic2-9])}
2023-05-30 02:00:33,625 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-0 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:33,625 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-5 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:33,625 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-8 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:33,626 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-2 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:33,626 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-9 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:33,626 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-1 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:33,626 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-4 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:33,626 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-6 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:33,626 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-7 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:33,627 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting the last seen epoch of partition topic1-3 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:33,627 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Finished assignment for group at generation 5: {consumer-yusufu_group_id-3-376d05d7-3fd8-4d78-9ace-5c155fb546d8=Assignment(partitions=[topic0-0, topic0-1, topic0-2]), consumer-yusufu_group_id-2-b07bf964-b406-4b7f-9398-c7eb5bd2025c=Assignment(partitions=[topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9])}
2023-05-30 02:00:33,631 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Successfully synced group in generation Generation{generationId=7, memberId='consumer-id1-1-0d2773dc-8d59-4961-97d0-0667ee432352', protocol='range'}
2023-05-30 02:00:33,631 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Notifying assignor about the new Assignment(partitions=[topic2-0, topic2-1, topic2-2, topic2-3, topic2-4, topic2-5, topic2-6, topic2-7, topic2-8, topic2-9])
2023-05-30 02:00:33,632 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Successfully synced group in generation Generation{generationId=5, memberId='consumer-yusufu_group_id-3-376d05d7-3fd8-4d78-9ace-5c155fb546d8', protocol='range'}
2023-05-30 02:00:33,632 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Successfully synced group in generation Generation{generationId=5, memberId='consumer-yusufu_group_id-2-b07bf964-b406-4b7f-9398-c7eb5bd2025c', protocol='range'}
2023-05-30 02:00:33,632 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Notifying assignor about the new Assignment(partitions=[topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9])
2023-05-30 02:00:33,632 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Notifying assignor about the new Assignment(partitions=[topic0-0, topic0-1, topic0-2])
2023-05-30 02:00:33,636 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Adding newly assigned partitions: topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9
2023-05-30 02:00:33,636 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Adding newly assigned partitions: topic0-0, topic0-1, topic0-2
2023-05-30 02:00:33,636 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Adding newly assigned partitions: topic2-0, topic2-1, topic2-2, topic2-3, topic2-4, topic2-5, topic2-6, topic2-7, topic2-8, topic2-9
2023-05-30 02:00:33,648 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-2
2023-05-30 02:00:33,648 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-1
2023-05-30 02:00:33,648 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-1
2023-05-30 02:00:33,648 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-3
2023-05-30 02:00:33,649 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-4
2023-05-30 02:00:33,649 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-3
2023-05-30 02:00:33,649 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-0
2023-05-30 02:00:33,649 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-2
2023-05-30 02:00:33,649 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-9
2023-05-30 02:00:33,649 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-9
2023-05-30 02:00:33,649 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-6
2023-05-30 02:00:33,649 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-8
2023-05-30 02:00:33,649 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-5
2023-05-30 02:00:33,649 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-5
2023-05-30 02:00:33,649 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-4
2023-05-30 02:00:33,649 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-8
2023-05-30 02:00:33,649 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-7
2023-05-30 02:00:33,649 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Found no committed offset for partition topic1-6
2023-05-30 02:00:33,649 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Found no committed offset for partition topic2-7
2023-05-30 02:00:33,654 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Setting offset for partition topic1-0 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
2023-05-30 02:00:33,654 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Setting offset for partition topic0-0 to the committed offset FetchPosition{offset=11, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
2023-05-30 02:00:33,654 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Setting offset for partition topic0-2 to the committed offset FetchPosition{offset=12, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
2023-05-30 02:00:33,654 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Setting offset for partition topic0-1 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
2023-05-30 02:00:33,656 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : yusufu_group_id: partitions assigned: [topic0-0, topic0-1, topic0-2]
2023-05-30 02:00:33,670 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 02:00:33,670 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 02:00:33,670 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 02:00:33,670 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-3 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 02:00:33,670 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-4 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 02:00:33,670 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 02:00:33,670 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-9 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 02:00:33,670 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-3 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 02:00:33,670 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-8 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 02:00:33,670 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 02:00:33,670 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-5 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 02:00:33,670 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-9 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 02:00:33,670 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-4 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 02:00:33,670 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-6 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 02:00:33,670 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-7 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 02:00:33,671 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting offset for partition topic1-6 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 02:00:33,671 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-5 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 02:00:33,671 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-8 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 02:00:33,671 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : yusufu_group_id: partitions assigned: [topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9]
2023-05-30 02:00:33,671 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.SubscriptionState : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting offset for partition topic2-7 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}.
2023-05-30 02:00:33,671 INFO  [id1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : id1: partitions assigned: [topic2-0, topic2-1, topic2-2, topic2-3, topic2-4, topic2-5, topic2-6, topic2-7, topic2-8, topic2-9]
2023-05-30 02:00:33,729 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 1 for partition topic1-0
2023-05-30 02:00:33,730 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@ff1a5a0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 02:00:34,245 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 1 for partition topic1-0
2023-05-30 02:00:34,245 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@ff1a5a0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 02:00:34,744 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 1 for partition topic1-0
2023-05-30 02:00:34,744 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@ff1a5a0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 02:00:35,258 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 1 for partition topic1-0
2023-05-30 02:00:35,258 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@ff1a5a0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 02:00:35,760 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 1 for partition topic1-0
2023-05-30 02:00:35,760 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@ff1a5a0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 02:00:36,285 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 1 for partition topic1-0
2023-05-30 02:00:36,285 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@ff1a5a0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 02:00:36,783 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 1 for partition topic1-0
2023-05-30 02:00:36,783 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@ff1a5a0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 02:00:37,291 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 1 for partition topic1-0
2023-05-30 02:00:37,291 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@ff1a5a0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 02:00:37,807 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 1 for partition topic1-0
2023-05-30 02:00:37,807 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@ff1a5a0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 02:00:38,302 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.DefaultErrorHandler : Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for topic1-0@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@ff1a5a0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 02:00:44,564 INFO  [http-nio-8080-exec-1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-05-30 02:00:44,642 INFO  [http-nio-8080-exec-1] org.apache.kafka.clients.producer.ProducerConfig : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 10
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2023-05-30 02:00:44,656 INFO  [http-nio-8080-exec-1] org.apache.kafka.clients.producer.KafkaProducer : [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-05-30 02:00:44,670 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser : Kafka version: 3.4.0
2023-05-30 02:00:44,671 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser : Kafka commitId: 2e1947d240607d53
2023-05-30 02:00:44,671 INFO  [http-nio-8080-exec-1] org.apache.kafka.common.utils.AppInfoParser : Kafka startTimeMs: 1685426444670
2023-05-30 02:00:44,681 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-0 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:44,681 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-5 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:44,681 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-8 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:44,681 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-2 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:44,681 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-9 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:44,681 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-1 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:44,681 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-4 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:44,681 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-6 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:44,681 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-7 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:44,681 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic1-3 to 0 since the associated topicId changed from null to BqhTgOtjSuCfKbwxx9BiPw
2023-05-30 02:00:44,682 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Cluster ID: v4WU3fq3QAaSYu7o2dK6hw
2023-05-30 02:00:44,682 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.producer.internals.TransactionManager : [Producer clientId=producer-1] ProducerId set to 6 with epoch 0
2023-05-30 02:00:44,737 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 2 for partition topic1-0
2023-05-30 02:00:44,737 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@ff1a5a0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 02:00:45,267 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 2 for partition topic1-0
2023-05-30 02:00:45,267 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@ff1a5a0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 02:00:45,762 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 2 for partition topic1-0
2023-05-30 02:00:45,762 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@ff1a5a0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 02:00:46,278 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 2 for partition topic1-0
2023-05-30 02:00:46,278 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@ff1a5a0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 02:00:46,774 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 2 for partition topic1-0
2023-05-30 02:00:46,774 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@ff1a5a0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 02:00:47,289 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 2 for partition topic1-0
2023-05-30 02:00:47,289 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@ff1a5a0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 02:00:47,799 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 2 for partition topic1-0
2023-05-30 02:00:47,799 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@ff1a5a0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 02:00:48,329 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 2 for partition topic1-0
2023-05-30 02:00:48,329 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@ff1a5a0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 02:00:48,825 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Seeking to offset 2 for partition topic1-0
2023-05-30 02:00:48,825 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:174)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2960)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2833)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@ff1a5a0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	... 12 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 02:00:49,320 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.DefaultErrorHandler : Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for topic1-0@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void com.yusufu.awesomespring.service.KafkaListenerService.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>,org.springframework.kafka.support.Acknowledgment,java.lang.String,int,long,long,org.apache.kafka.clients.consumer.KafkaConsumer<?, ?>)]
Bean [com.yusufu.awesomespring.service.KafkaListenerService@ff1a5a0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2993)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2938)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2904)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$58(KafkaMessageListenerContainer.java:2822)
	at io.micrometer.observation.Observation.lambda$observe$4(Observation.java:544)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:544)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2820)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2672)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2558)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2200)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1555)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1519)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1394)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:833)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:377)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
Caused by: org.springframework.messaging.MessageHandlingException: Missing header 'kafka_timestamp' for method parameter type [long]
	at org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver.handleMissingValue(HeaderMethodArgumentResolver.java:111)
	at org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:108)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:366)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2924)
	... 14 common frames omitted
2023-05-30 02:01:12,965 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic2-0 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 02:01:12,966 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic2-5 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 02:01:12,966 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic2-8 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 02:01:12,966 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic2-2 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 02:01:12,966 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic2-9 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 02:01:12,966 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic2-1 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 02:01:12,966 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic2-4 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 02:01:12,966 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic2-6 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 02:01:12,967 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic2-7 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 02:01:12,967 INFO  [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata : [Producer clientId=producer-1] Resetting the last seen epoch of partition topic2-3 to 0 since the associated topicId changed from null to -MwyrXOTTFylXO6U53N49g
2023-05-30 02:02:17,865 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Revoke previously assigned partitions topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9
2023-05-30 02:02:17,865 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Revoke previously assigned partitions topic0-0, topic0-1, topic0-2
2023-05-30 02:02:17,865 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Revoke previously assigned partitions topic2-0, topic2-1, topic2-2, topic2-3, topic2-4, topic2-5, topic2-6, topic2-7, topic2-8, topic2-9
2023-05-30 02:02:17,867 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : yusufu_group_id: partitions revoked: [topic0-0, topic0-1, topic0-2]
2023-05-30 02:02:17,867 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : yusufu_group_id: partitions revoked: [topic1-0, topic1-1, topic1-2, topic1-3, topic1-4, topic1-5, topic1-6, topic1-7, topic1-8, topic1-9]
2023-05-30 02:02:17,867 INFO  [id1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : id1: partitions revoked: [topic2-0, topic2-1, topic2-2, topic2-3, topic2-4, topic2-5, topic2-6, topic2-7, topic2-8, topic2-9]
2023-05-30 02:02:17,868 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Member consumer-yusufu_group_id-3-376d05d7-3fd8-4d78-9ace-5c155fb546d8 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2023-05-30 02:02:17,868 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Member consumer-id1-1-0d2773dc-8d59-4961-97d0-0667ee432352 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2023-05-30 02:02:17,868 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Member consumer-yusufu_group_id-2-b07bf964-b406-4b7f-9398-c7eb5bd2025c sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2023-05-30 02:02:17,868 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 02:02:17,868 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 02:02:17,868 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 02:02:17,868 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 02:02:17,868 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 02:02:17,868 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 02:02:17,868 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Unsubscribed all topics or patterns and assigned partitions
2023-05-30 02:02:17,868 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Unsubscribed all topics or patterns and assigned partitions
2023-05-30 02:02:17,868 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.KafkaConsumer : [Consumer clientId=consumer-id1-1, groupId=id1] Unsubscribed all topics or patterns and assigned partitions
2023-05-30 02:02:17,868 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 02:02:17,868 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 02:02:17,869 INFO  [id1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-id1-1, groupId=id1] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 02:02:17,869 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Resetting generation and member id due to: consumer pro-actively leaving the group
2023-05-30 02:02:17,869 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-2, groupId=yusufu_group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 02:02:17,869 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator : [Consumer clientId=consumer-yusufu_group_id-3, groupId=yusufu_group_id] Request joining group due to: consumer pro-actively leaving the group
2023-05-30 02:02:17,872 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 02:02:17,874 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 02:02:17,874 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 02:02:17,874 INFO  [id1-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 02:02:17,874 INFO  [id1-0-C-1] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 02:02:17,874 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 02:02:17,874 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 02:02:17,874 INFO  [id1-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 02:02:17,874 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 02:02:17,879 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.utils.AppInfoParser : App info kafka.consumer for consumer-yusufu_group_id-3 unregistered
2023-05-30 02:02:17,879 INFO  [id1-0-C-1] org.apache.kafka.common.utils.AppInfoParser : App info kafka.consumer for consumer-id1-1 unregistered
2023-05-30 02:02:17,879 INFO  [id1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : id1: Consumer stopped
2023-05-30 02:02:17,879 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : yusufu_group_id: Consumer stopped
2023-05-30 02:02:17,880 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.utils.AppInfoParser : App info kafka.consumer for consumer-yusufu_group_id-2 unregistered
2023-05-30 02:02:17,880 INFO  [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.springframework.kafka.listener.KafkaMessageListenerContainer : yusufu_group_id: Consumer stopped
2023-05-30 02:02:17,904 INFO  [SpringApplicationShutdownHook] org.apache.kafka.clients.producer.KafkaProducer : [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2023-05-30 02:02:17,907 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Metrics scheduler closed
2023-05-30 02:02:17,907 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-30 02:02:17,907 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.metrics.Metrics : Metrics reporters closed
2023-05-30 02:02:17,907 INFO  [SpringApplicationShutdownHook] org.apache.kafka.common.utils.AppInfoParser : App info kafka.producer for producer-1 unregistered
2023-05-30 02:02:17,908 INFO  [SpringApplicationShutdownHook] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-05-30 02:02:18,083 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Shutdown initiated...
2023-05-30 02:02:18,097 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Shutdown completed.
