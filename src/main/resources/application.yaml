server:
    port: 8080

spring:
    datasource:
        #url: jdbc:h2:file:~/orders-db;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1
        url: jdbc:h2:mem:testdb
        username: sa
        password:
        driver-class-name: org.h2.Driver
        platform: h2
        initialization-mode: NEVER
    jpa:
        hibernate:
            ddl-auto: create-drop # update, create, create-drop
        database-platform: org.hibernate.dialect.H2Dialect
        show-sql: true
    h2:
        console:
            enabled: true
            path: /h2
            settings:
                web-allow-others: true
    kafka:
        bootstrap-servers: localhost:9092
        consumer:
            bootstrap-servers: localhost:9092
            group-id: group_id
            auto-offset-reset: earliest
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        producer:
            bootstrap-servers: localhost:9092
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.apache.kafka.common.serialization.StringSerializer


logging:
    file:
        name: awesomespring.log
    pattern:
        console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){yellow} %highlight(%-5level) %cyan(%logger{15}) : %msg%n"
        file: "%d %-5level [%thread] %logger : %msg%n"
    level:
        root: INFO
        org.springframework.web: ERROR
        com.yusufu: DEBUG
        org.hibernate: ERROR
        org.apache.http: INFO
        org.apache.kafka: INFO
